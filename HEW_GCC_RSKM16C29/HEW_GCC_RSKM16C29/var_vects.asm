/*------------------------------------------------------------------------
                                                                       |
   FILE        : var_vects.asm                                         |
   DATE        :  Sat, Feb 14, 2015                                    |
   DESCRIPTION :   define the variable vector table.                   |
   CPU GROUP   :    29(ROM128K)                                        |
                                                                       |
   This file is generated by KPIT GNU Project Generator (Ver.4.5).     |
                                                                       |
------------------------------------------------------------------------*/


/***************************************************************************
 **
  *  Fixed Vector for M16C/60,30,20,10
  *
  *  Function: define variable vector table
  *

 **************************************************************************/
; Variable Vector Table

	 .section	.var_vects,"a",@progbits
	 .type	_VariableVectors, @object
	 .size	_VariableVectors, 256

 _VariableVectors:

; BRK				(software int 0)
.long	__brk


; CAN0 wakeup			(software int 1)
.long	__can0_wakeup


; CAN0 receive			(software int 2)
.long	__can0_receive


; CAN0 trance			(software int 3)
.long	__can0_trance


; INT3				(software int 4)
.long	__int3


; IC/OC interrupt 0		(software int 5)
.long	__ic_oc0


; IC/OC interrupt 1,I2Cbus	(software int 6)
.long	__ic_oc1


; IC/OC Base Timer		(software int 7)
.long	__ic_oc_basetimer


; SI/O4,INT5			(software int 8)
.long	__int5


; SI/O3,INT4			(software int 9)
.long	__int4


; UART2 Bus Collision		(software int 10)
.long	__uart2_bus_collision


; DMA0				(software int 11)
.long	__dma0


; DMA1				(software int 12)
.long	__dma1


; CAN0 error			(software int 13)
.long	__can0_error


; A-D,input key		(software int 14)
.long	__ad_converter


; uart2 trance/NACK2		(software int 15)
.long	__uart2_trance


; uart2 receive/ACK2		(software int 16)
.long	__uart2_receive


#if defined (__STANDARD_IO__) && (defined(__FOUSB__) ||  defined(__E8__))
; uart0 can't be used
#else
; uart0 trance			(software int 17)
.long	__uart0_trance

#endif

; uart0 receive		(software int 18)
.long	__uart0_receive


#if defined(__STANDARD_IO__) || defined(__FOUSB__) || defined(__E8__)
; uart1 can't be used
#else
; uart1 trance			(software int 19)
.long	__uart1_trance

#endif

; uart1 receive		(software int 20)
.long	__uart1_receive


; TIMER A0			(software int 21)
.long	_TimerA0_ISR


; TIMER A1			(software int 22)
.long	__timer_a1


; TIMER A2			(software int 23)
.long	__timer_a2


; TIMER A3			(software int 24)
.long	__timer_a3


; TIMER A4			(software int 25)
.long	__timer_a4


; timer b0			(software int 26)
.long	__timer_b0


; timer b1			(software int 27)
.long	__timer_b1


; timer b2			(software int 28)
.long	__timer_b2


; int0				(software int 29)
.long	__int0


; int1				(software int 30)
.long	__int1


; int2				(software int 31)
.long	__int2


; software int 32 for user or MR30
.long   _nOS_SwitchContextHandler

; software int 33 for user or MR30
.long   _nOS_SwitchContextFromIsrHandler

; software int 34 for user or MR30
; software int 35 for user or MR30
; software int 36 for user or MR30
; software int 37 for user or MR30
; software int 38 for user or MR30
; software int 39 for user or MR30
; software int 40 for user or MR30
; software int 41 for user or MR30
; software int 42 for user or MR30
; software int 43 for user or MR30
; software int 44 for user or MR30
; software int 45 for user or MR30
; software int 46 for user or MR30
; software int 47 for user or MR30
; software int 48 for user
; software int 49 for user
; software int 50 for user
; software int 51 for user
; software int 52 for user
; software int 53 for user
; software int 54 for user
; software int 55 for user
; software int 56 for user
; software int 57 for user
; software int 58 for user
; software int 59 for user
; software int 60 for user
; software int 61 for user
; software int 62 for user
; software int 63 for user

.end
