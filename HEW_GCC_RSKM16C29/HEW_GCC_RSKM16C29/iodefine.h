/***********************************************************************/
/*                                                                     */
/*  FILE        :iodefine.h                                            */
/*  DATE        :Sat, Feb 14, 2015                                     */
/*  DESCRIPTION :define the sfr register. (for C language)             */
/*  CPU GROUP   :29(ROM128K)                                           */
/*                                                                     */
/*  This file is generated by KPIT GNU Project Generator.              */
/*                                                                     */
/***********************************************************************/

#ifndef IODEFINE_H 
#define IODEFINE_H

/****************************************************************************
*                                                                           *
*   file name   : definition of M16C/29's SFR                               *
*                                                                           *
*****************************************************************************/

/********************************************************
*   declare SFR addresses                               *
********************************************************/

#define     pm0    (*(volatile union byte_def *) (0x0004))       /* Processor mode register 0 */

#define     pm1    (*(volatile union byte_def *) (0x0005))       /* Processor mode register 1 */

#define     cm0    (*(volatile union byte_def *) (0x0006))       /* System clock control register 0 */

#define     cm1    (*(volatile union byte_def *) (0x0007))       /* System clock control register 1 */

#define     aier   (*(volatile union byte_def *) (0x0009))       /* Address match interrupt enable register */

#define     prcr   (*(volatile union byte_def *) (0x000a))       /* Protect register */

#define     cm2    (*(volatile union byte_def *) (0x000c))       /* Oscillation stop detection register */

#define     wdts   (*(volatile union byte_def *) (0x000e))       /* Watchdog timer start register */

#define     wdc    (*(volatile union byte_def *) (0x000f))       /* Watchdog timer control register */

#define     rmad0  (*(volatile union word_def_1 *) (0x0010))       /* Address match interrupt register 0 */

#define     rmad1  (*(volatile union word_def_1 *) (0x0014))       /* Address match interrupt register 1 */

#define     vcr1   (*(volatile union byte_def *) (0x0019))       /* Voltage detection register 1 */

#define     vcr2   (*(volatile union byte_def *) (0x001a))       /* Voltage detection register 2 */

#define     plc0   (*(volatile union byte_def *) (0x001c))       /* PLL control register 0 */

#define     pm2    (*(volatile union byte_def *) (0x001e))       /* Processor mode register 2 */

#define     d4int  (*(volatile union byte_def *) (0x001f))       /* Voltage down detection interrupt register */

#define     sar0   (*(volatile union word_def_1 *) (0x0020))       /* DMA0 source pointer */

#define     dar0   (*(volatile union word_def_1 *) (0x0024))       /* DMA0 destination pointer */

#define     tcr0   (*(volatile union word_def_2 *) (0x0028))       /* DMA0 transfer counter */

#define     dm0con (*(volatile union byte_def *) (0x002c))       /* DMA0 control register */

#define     sar1   (*(volatile union word_def_1 *) (0x0030))       /* DMA1 source pointer */

#define     dar1   (*(volatile union word_def_1 *) (0x0034))       /* DMA1 destination pointer */

#define     tcr1   (*(volatile union word_def_2 *) (0x0038))       /* DMA1 transfer counter */

#define     dm1con (*(volatile union byte_def *) (0x003c))       /* DMA1 control register */

#define     c01wkic    (*(volatile union byte_def *) (0x0041))   /* CAN0 wake up interrupt control register */

#define     c0recic    (*(volatile union byte_def *) (0x0042))   /* CAN0 successful reception interrupt control register */

#define     c0trmic    (*(volatile union byte_def *) (0x0043))   /* CAN0 successful transmission interrupt control register */

#define     int3ic   (*(volatile union byte_def *) (0x0044))     /* INT3~ interrupt control register */

#define     icoc0ic  (*(volatile union byte_def *) (0x0045))     /* IC/OC 0 interrupt control register */

#define     icoc1ic  (*(volatile union byte_def *) (0x0046))     /* IC/OC 1 interrupt control register */

#define     iicic    (*(volatile union byte_def *) (0x0046))     /* I2C-BUS interface interrupt control register */

#define     btic     (*(volatile union byte_def *) (0x0047))     /* IC/OC base timer interrupt control register */

#define     scldaic  (*(volatile union byte_def *) (0x0047))     /* SCL_SDA interrupt control register */

#define     s4ic   (*(volatile union byte_def *) (0x0048))       /* SI/O4 interrupt control register */

#define     int5ic (*(volatile union byte_def *) (0x0048))       /* INT5~ interrupt control register */

#define     s3ic   (*(volatile union byte_def *) (0x0049))       /* SI/O3 interrupt control register */

#define     int4ic (*(volatile union byte_def *) (0x0049))       /* INT4~ interrupt control register */

#define     bcnic  (*(volatile union byte_def *) (0x004a))       /* UART2 Bus collision detection interrupt control register */

#define     dm0ic  (*(volatile union byte_def *) (0x004b))       /* DMA0 interrupt control register */

#define     dm1ic  (*(volatile union byte_def *) (0x004c))       /* DMA1 interrupt control register */

#define     c01erric   (*(volatile union byte_def *) (0x004d))   /* CAN0 error interrupt control register */

#define     adic   (*(volatile union byte_def *) (0x004e))       /* A/D conversion interrupt control register */

#define     kupic  (*(volatile union byte_def *) (0x004e))       /* Key input interrupt control register */

#define     s2tic  (*(volatile union byte_def *) (0x004f))       /* UART2 transmit interrupt control register */

#define     s2ric  (*(volatile union byte_def *) (0x0050))       /* UART2 receive interrupt control register */

#define     s0tic  (*(volatile union byte_def *) (0x0051))       /* UART0 transmit interrupt control register */

#define     s0ric  (*(volatile union byte_def *) (0x0052))       /* UART0 receive interrupt control register */

#define     s1tic  (*(volatile union byte_def *) (0x0053))       /* UART1 transmit interrupt control register */

#define     s1ric  (*(volatile union byte_def *) (0x0054))       /* UART1 receive interrupt control register */

#define     ta0ic  (*(volatile union byte_def *) (0x0055))       /* Timer A0 interrupt control register */

#define     ta1ic  (*(volatile union byte_def *) (0x0056))       /* Timer A1 interrupt control register */

#define     ta2ic  (*(volatile union byte_def *) (0x0057))       /* Timer A2 interrupt control register */

#define     ta3ic  (*(volatile union byte_def *) (0x0058))       /* Timer A3 interrupt control register */

#define     ta4ic  (*(volatile union byte_def *) (0x0059))       /* Timer A4 interrupt control register */

#define     tb0ic  (*(volatile union byte_def *) (0x005a))       /* Timer B0 interrupt control register */

#define     tb1ic  (*(volatile union byte_def *) (0x005b))       /* Timer B1 interrupt control register */

#define     tb2ic  (*(volatile union byte_def *) (0x005c))       /* Timer B2 interrupt control register */

#define     int0ic (*(volatile union byte_def *) (0x005d))       /* INT0~ interrupt control register */

#define     int1ic (*(volatile union byte_def *) (0x005e))       /* INT1~ interrupt control register */

#define     int2ic (*(volatile union byte_def *) (0x005f))       /* INT2~ interrupt control register */

#define     c0slot     (*(volatile union can_slot_def_t *) (0x0060))       /* CAN0 message box   :Message Object */

#define     c0slot0    (*(volatile union can_slot_def_t *) (0x0060))       /* CAN0 message box 0 :Message Object */

#define     c0slot1    (*(volatile union can_slot_def_t *) (0x0070))       /* CAN0 message box 1 :Message Object */

#define     c0slot2    (*(volatile union can_slot_def_t *) (0x0080))       /* CAN0 message box 2 :Message Object */

#define     c0slot3    (*(volatile union can_slot_def_t *) (0x0090))       /* CAN0 message box 3 :Message Object */

#define     c0slot4    (*(volatile union can_slot_def_t *) (0x00a0))       /* CAN0 message box 4 :Message Object */

#define     c0slot5    (*(volatile union can_slot_def_t *) (0x00b0))       /* CAN0 message box 5 :Message Object */

#define     c0slot6    (*(volatile union can_slot_def_t *) (0x00c0))       /* CAN0 message box 6 :Message Object */

#define     c0slot7    (*(volatile union can_slot_def_t *) (0x00d0))       /* CAN0 message box 7 :Message Object */

#define     c0slot8    (*(volatile union can_slot_def_t *) (0x00e0))       /* CAN0 message box 8 :Message Object */

#define     c0slot9    (*(volatile union can_slot_def_t *) (0x00f0))       /* CAN0 message box 9 :Message Object */

#define     c0slot10   (*(volatile union can_slot_def_t *) (0x0100))       /* CAN0 message box 10:Message Object */

#define     c0slot11   (*(volatile union can_slot_def_t *) (0x0110))       /* CAN0 message box 11:Message Object */

#define     c0slot12   (*(volatile union can_slot_def_t *) (0x0120))       /* CAN0 message box 12:Message Object */

#define     c0slot13   (*(volatile union can_slot_def_t *) (0x0130))       /* CAN0 message box 13:Message Object */

#define     c0slot14   (*(volatile union can_slot_def_t *) (0x0140))       /* CAN0 message box 14:Message Object */

#define     c0slot15   (*(volatile union can_slot_def_t *) (0x0150))       /* CAN0 message box 15:Message Object */

#define     c0gmr      (*(volatile union can_mask_def_t *) (0x0160))       /* CAN0 global mask register */

#define     c0lmar     (*(volatile union can_mask_def_t *) (0x0166))       /* CAN0 local mask A register */

#define     c0lmbr     (*(volatile union can_mask_def_t *) (0x016c))       /* CAN0 local mask B register */

#define     fmr4       (*(volatile union byte_def *) (0x01b3))       /* Flash memory control register 4 */

#define     fmr1       (*(volatile union byte_def *) (0x01b5))       /* Flash memory control register 1 */

#define     fmr0       (*(volatile union byte_def *) (0x01b7))       /* Flash memory control register 0 */

#define     c0mctl     (*(volatile union can_mctl_def *) (0x0200))       /* CAN0 message control register */

#define     c0mctl0    (*(volatile union can_mctl_def *) (0x0200))       /* CAN0 message control register 0 */

#define     c0mctl1    (*(volatile union can_mctl_def *) (0x0201))       /* CAN0 message control register 1 */

#define     c0mctl2    (*(volatile union can_mctl_def *) (0x0202))       /* CAN0 message control register 2 */

#define     c0mctl3    (*(volatile union can_mctl_def *) (0x0203))       /* CAN0 message control register 3 */

#define     c0mctl4    (*(volatile union can_mctl_def *) (0x0204))       /* CAN0 message control register 4 */

#define     c0mctl5    (*(volatile union can_mctl_def *) (0x0205))       /* CAN0 message control register 5 */

#define     c0mctl6    (*(volatile union can_mctl_def *) (0x0206))       /* CAN0 message control register 6 */

#define     c0mctl7    (*(volatile union can_mctl_def *) (0x0207))       /* CAN0 message control register 7 */

#define     c0mctl8    (*(volatile union can_mctl_def *) (0x0208))       /* CAN0 message control register 8 */

#define     c0mctl9    (*(volatile union can_mctl_def *) (0x0209))       /* CAN0 message control register 9 */

#define     c0mctl10   (*(volatile union can_mctl_def *) (0x020a))       /* CAN0 message control register 10 */

#define     c0mctl11   (*(volatile union can_mctl_def *) (0x020b))       /* CAN0 message control register 11 */

#define     c0mctl12   (*(volatile union can_mctl_def *) (0x020c))       /* CAN0 message control register 12 */

#define     c0mctl13   (*(volatile union can_mctl_def *) (0x020d))       /* CAN0 message control register 13 */

#define     c0mctl14   (*(volatile union can_mctl_def *) (0x020e))       /* CAN0 message control register 14 */

#define     c0mctl15   (*(volatile union can_mctl_def *) (0x020f))       /* CAN0 message control register 15 */

#define     c0ctlr (*(volatile union c0ctlr_def *) (0x0210))       /* CAN0 control register */

#define     c0str  (*(volatile union c0str_def *) (0x0212))       /* CAN0 status register */

#define     c0sstr (*(volatile union slot_def *) (0x0214))       /* CAN0 slot status register */

#define     c0icr  (*(volatile union slot_def *) (0x0216))       /* CAN0 interrupt control register */

#define     c0idr  (*(volatile union slot_def *) (0x0218))       /* CAN0 extended ID register */

#define     c0conr (*(volatile union c0conr_def *) (0x021a))       /* CAN0 configuration register */

#define     c0recr (*(volatile union byte_def *) (0x021c))       /* CAN0 receive error count register */

#define     c0tecr (*(volatile union byte_def *) (0x021d))       /* CAN0 transmit error count register */

#define     c0tsr  (*(volatile union byte_def *) (0x021e))       /* CAN0 time stamp register */

#define     c0afs  (*(volatile union c0afs_def *) (0x0242))       /* CAN0 acceptance filter support register */

#define     tprc   (*(volatile union byte_def *) (0x025a))       /* Three-phase protect control register */

#define     rocr   (*(volatile union byte_def *) (0x025c))       /* On-chip oscillator control register */

#define     pacr   (*(volatile union byte_def *) (0x025d))       /* Pin assignment control register */

#define     pclkr  (*(volatile union byte_def *) (0x025e))       /* Peripheral clock select register */

#define     cclkr  (*(volatile union byte_def *) (0x025f))       /* CAN clock select register */

#define     s00    (*(volatile union byte_def *) (0x02e0))       /* I2C0 data shift register */

#define     s0d0   (*(volatile union byte_def *) (0x02e2))       /* I2C0 address register */

#define     s1d0   (*(volatile union byte_def *) (0x02e3))       /* I2C0 control register 0 */

#define     s20    (*(volatile union byte_def *) (0x02e4))       /* I2C0 clock control register */

#define     s2d0   (*(volatile union byte_def *) (0x02e5))       /* I2C0 start/stop condition control register */

#define     s3d0   (*(volatile union byte_def *) (0x02e6))       /* I2C0 control register 1 */

#define     s4d0   (*(volatile union byte_def *) (0x02e7))       /* I2C0 control register 2 */

#define     s10    (*(volatile union byte_def *) (0x02e8))       /* I2C0 status register */

#define     g1tm0  (*(volatile union word_def_2 *) (0x0300))       /* Time measurement register 0 */

#define     g1po0  (*(volatile union word_def_2 *) (0x0300))       /* Waveform generation register 0 */

#define     g1tm1  (*(volatile union word_def_2 *) (0x0302))       /* Time measurement register 1 */

#define     g1po1  (*(volatile union word_def_2 *) (0x0302))       /* Waveform generation register 1 */

#define     g1tm2  (*(volatile union word_def_2 *) (0x0304))       /* Time measurement register 2 */

#define     g1po2  (*(volatile union word_def_2 *) (0x0304))       /* Waveform generation register 2 */

#define     g1tm3  (*(volatile union word_def_2 *) (0x0306))       /* Time measurement register 3 */

#define     g1po3  (*(volatile union word_def_2 *) (0x0306))       /* Waveform generation register 3 */

#define     g1tm4  (*(volatile union word_def_2 *) (0x0308))       /* Time measurement register 4 */

#define     g1po4  (*(volatile union word_def_2 *) (0x0308))       /* Waveform generation register 4 */

#define     g1tm5  (*(volatile union word_def_2 *) (0x030a))       /* Time measurement register 5 */

#define     g1po5  (*(volatile union word_def_2 *) (0x030a))       /* Waveform generation register 5 */

#define     g1tm6  (*(volatile union word_def_2 *) (0x030c))       /* Time measurement register 6 */

#define     g1po6  (*(volatile union word_def_2 *) (0x030c))       /* Waveform generation register 6 */

#define     g1tm7  (*(volatile union word_def_2 *) (0x030e))       /* Time measurement register 7 */

#define     g1po7  (*(volatile union word_def_2 *) (0x030e))       /* Waveform generation register 7 */

#define     g1pocr0 (*(volatile union byte_def *) (0x0310))      /* Waveform generation control register 0 */

#define     g1pocr1 (*(volatile union byte_def *) (0x0311))      /* Waveform generation control register 1 */

#define     g1pocr2 (*(volatile union byte_def *) (0x0312))      /* Waveform generation control register 2 */

#define     g1pocr3 (*(volatile union byte_def *) (0x0313))      /* Waveform generation control register 3 */

#define     g1pocr4 (*(volatile union byte_def *) (0x0314))      /* Waveform generation control register 4 */

#define     g1pocr5 (*(volatile union byte_def *) (0x0315))      /* Waveform generation control register 5 */

#define     g1pocr6 (*(volatile union byte_def *) (0x0316))      /* Waveform generation control register 6 */

#define     g1pocr7 (*(volatile union byte_def *) (0x0317))      /* Waveform generation control register 7 */

#define     g1tmcr0 (*(volatile union byte_def *) (0x0318))      /* Time measurement control register 0 */

#define     g1tmcr1 (*(volatile union byte_def *) (0x0319))      /* Time measurement control register 1 */

#define     g1tmcr2 (*(volatile union byte_def *) (0x031a))      /* Time measurement control register 2 */

#define     g1tmcr3 (*(volatile union byte_def *) (0x031b))      /* Time measurement control register 3 */

#define     g1tmcr4 (*(volatile union byte_def *) (0x031c))      /* Time measurement control register 4 */

#define     g1tmcr5 (*(volatile union byte_def *) (0x031d))      /* Time measurement control register 5 */

#define     g1tmcr6 (*(volatile union byte_def *) (0x031e))      /* Time measurement control register 6 */

#define     g1tmcr7 (*(volatile union byte_def *) (0x031f))      /* Time measurement control register 7 */

#define     g1bt    (*(volatile union word_def_2 *) (0x0320))      /* Base timer register */

#define     g1bcr0  (*(volatile union byte_def *) (0x0322))      /* Base timer control register 0 */

#define     g1bcr1  (*(volatile union byte_def *) (0x0323))      /* Base timer control register 1 */

#define     g1tpr6  (*(volatile union byte_def *) (0x0324))      /* Time measurement prescale register 6 */

#define     g1tpr7  (*(volatile union byte_def *) (0x0325))      /* Time measurement prescale register 7 */

#define     g1fe    (*(volatile union byte_def *) (0x0326))      /* Function enable register */

#define     g1fs    (*(volatile union byte_def *) (0x0327))      /* Function select register */

#define     g1btrr  (*(volatile union word_def_2 *) (0x0328))      /* Base timer reset register */

#define     g1dv    (*(volatile union byte_def *) (0x032a))      /* Divider register */

#define     g1ir    (*(volatile union byte_def *) (0x0330))      /* Interruput request register */

#define     g1ie0   (*(volatile union byte_def *) (0x0331))      /* Interruput enable register 0 */

#define     g1ie1   (*(volatile union byte_def *) (0x0332))      /* Interruput enable register 1 */

#define     nddr    (*(volatile union byte_def *) (0x033e))      /* NMI digital debounce register */

#define     p17ddr  (*(volatile union byte_def *) (0x033f))      /* P17 digital debounce register */

#define     ta11   (*(volatile unsigned char *) (0x0342))       /* Timer A1-1 register */

#define     ta21   (*(volatile unsigned char *) (0x0344))       /* Timer A2-1 register */

#define     ta41   (*(volatile unsigned char *) (0x0346))       /* Timer A4-1 register */

#define     invc0  (*(volatile union byte_def *) (0x0348))       /* Three-phase PWM control regester 0 */

#define     invc1  (*(volatile union byte_def *) (0x0349))       /* Three-phase PWM control register 1 */

#define     idb0   (*(volatile union byte_def *) (0x034a))       /* Three-phase output buffer register 0 */

#define     idb1   (*(volatile union byte_def *) (0x034b))       /* Three-phase output buffer register 1 */

#define     dtt    (*(volatile union byte_def *) (0x034c))       /* Dead time timer */

#define     ictb2  (*(volatile union byte_def *) (0x034d))       /* Timer B2 interrupt occurrences frequency set counter */

#define     pdrf   (*(volatile union byte_def *) (0x034e))       /* Position-data-retain function register */

#define     pfcr   (*(volatile union byte_def *) (0x0358))       /* Port function control register */

#define     ifsr2a (*(volatile union byte_def *) (0x035e))       /* Interrupt cause select register 2 */

#define     ifsr   (*(volatile union byte_def *) (0x035f))       /* Interrupt cause select register */

#define     s3trr  (*(volatile union byte_def *) (0x0360))       /* SI/O3 transmit/receive register */

#define     s3c    (*(volatile union byte_def *) (0x0362))       /* SI/O3 control register */

#define     s3brg  (*(volatile union byte_def *) (0x0363))       /* SI/O3 bit rate generator */

#define     s4trr  (*(volatile union byte_def *) (0x0364))       /* SI/O4 transmit/receive register */

#define     s4c    (*(volatile union byte_def *) (0x0366))       /* SI/O4 control register */

#define     s4brg  (*(volatile union byte_def *) (0x0367))       /* SI/O4 bit rate generator */

#define     u2smr4 (*(volatile union byte_def *) (0x0374))       /* UART2 special mode register 4 */

#define     u2smr3 (*(volatile union byte_def *) (0x0375))       /* UART2 special mode register 3 */

#define     u2smr2 (*(volatile union byte_def *) (0x0376))       /* UART2 special mode register 2 */

#define     u2smr  (*(volatile union byte_def *) (0x0377))       /* UART2 special mode register */

#define     u2mr   (*(volatile union byte_def *) (0x0378))       /* UART2 transmit/receive mode register */

#define     u2brg  (*(volatile union byte_def *) (0x0379))       /* UART2 bit rate generator */

#define     u2tb   (*(volatile union word_def_2 *) (0x037a))       /* UART2 transmit buffer register */

#define     u2c0   (*(volatile union byte_def *) (0x037c))       /* UART2 transmit/receive control register 0 */

#define     u2c1   (*(volatile union byte_def *) (0x037d))       /* UART2 transmit/receive control register 1 */

#define     u2rb   (*(volatile union word_def_2 *) (0x037e))       /* UART2 receive buffer register */

#define     tabsr  (*(volatile union byte_def *) (0x0380))       /* Count start flag */

#define     cpsrf  (*(volatile union byte_def *) (0x0381))       /* Clock prescaler reset flag */

#define     onsf   (*(volatile union byte_def *) (0x0382))       /* One-shot start flag */

#define     trgsr  (*(volatile union byte_def *) (0x0383))       /* Trigger select register */

#define     udf    (*(volatile union byte_def *) (0x0384))       /* Up/down flag */

#define     ta0    (*(volatile unsigned char *) (0x0386))       /* Timer A0 register */

#define     ta1    (*(volatile unsigned char *) (0x0388))       /* Timer A1 register */

#define     ta2    (*(volatile unsigned char *) (0x038a))       /* Timer A2 register */

#define     ta3    (*(volatile unsigned char *) (0x038c))       /* Timer A3 register */

#define     ta4    (*(volatile unsigned char *) (0x038e))       /* Timer A4 register */

#define     tb0    (*(volatile unsigned char *) (0x0390))       /* Timer B0 register */

#define     tb1    (*(volatile unsigned char *) (0x0392))       /* Timer B1 register */

#define     tb2    (*(volatile unsigned char *) (0x0394))       /* Timer B2 register */

#define     ta0mr  (*(volatile union byte_def *) (0x0396))       /* Timer A0 mode register */

#define     ta1mr  (*(volatile union byte_def *) (0x0397))       /* Timer A1 mode register */

#define     ta2mr  (*(volatile union byte_def *) (0x0398))       /* Timer A2 mode register */

#define     ta3mr  (*(volatile union byte_def *) (0x0399))       /* Timer A3 mode register */

#define     ta4mr  (*(volatile union byte_def *) (0x039a))       /* Timer A4 mode register */

#define     tb0mr  (*(volatile union byte_def *) (0x039b))       /* Timer B0 mode register */

#define     tb1mr  (*(volatile union byte_def *) (0x039c))       /* Timer B1 mode register */

#define     tb2mr  (*(volatile union byte_def *) (0x039d))       /* Timer B2 mode register */

#define     tb2sc  (*(volatile union byte_def *) (0x039e))	    /* Timer B2 special mode register */

#define     u0mr   (*(volatile union byte_def *) (0x03a0))       /* UART0 transmit/receive mode register */

#define     u0brg  (*(volatile union byte_def *) (0x03a1))       /* UART0 bit rate generator */

#define     u0tb   (*(volatile union word_def_2 *) (0x03a2))       /* UART0 transmit buffer register */

#define     u0c0   (*(volatile union byte_def *) (0x03a4))       /* UART0 transmit/receive control register 0 */

#define     u0c1   (*(volatile union byte_def *) (0x03a5))       /* UART0 transmit/receive control register 1 */

#define     u0rb   (*(volatile union word_def_2 *) (0x03a6))       /* UART0 receive buffer register */

#define     u1mr   (*(volatile union byte_def *) (0x03a8))       /* UART1 transmit/receive mode register */

#define     u1brg  (*(volatile union byte_def *) (0x03a9))       /* UART1 bit rate generator */

#define     u1tb   (*(volatile union word_def_2 *) (0x03aa))       /* UART1 transmit buffer register */

#define     u1c0   (*(volatile union byte_def *) (0x03ac))       /* UART1 transmit/receive control register 0 */

#define     u1c1   (*(volatile union byte_def *) (0x03ad))       /* UART1 transmit/receive control register 1 */

#define     u1rb   (*(volatile union word_def_2 *) (0x03ae))       /* UART1 receive buffer register */

#define     ucon   (*(volatile union byte_def *) (0x03b0))       /* UART transmit/receive control register 2 */

#define     crcsar (*(volatile union word_def_2 *) (0x03b4))       /* sfr address register */

#define     crcmr  (*(volatile union byte_def *) (0x03b6))       /* crc mode register */

#define     dm0sl  (*(volatile union byte_def *) (0x03b8))       /* DMA0 request cause select register */

#define     dm1sl  (*(volatile union byte_def *) (0x03ba))       /* DMA1 request cause select register */

#define     crcd   (*(volatile union word_def_2 *) (0x03bc))       /* CRC data register */

#define     crcin  (*(volatile union byte_def *) (0x03be))       /* CRC input register */

#define     ad0    (*(volatile union word_def_2 *) (0x03c0))       /* A/D register 0 */

#define     ad1    (*(volatile union word_def_2 *) (0x03c2))       /* A/D register 1 */

#define     ad2    (*(volatile union word_def_2 *) (0x03c4))       /* A/D register 2 */

#define     ad3    (*(volatile union word_def_2 *) (0x03c6))       /* A/D register 3 */

#define     ad4    (*(volatile union word_def_2 *) (0x03c8))       /* A/D register 4 */

#define     ad5    (*(volatile union word_def_2 *) (0x03ca))       /* A/D register 5 */

#define     ad6    (*(volatile union word_def_2 *) (0x03cc))       /* A/D register 6 */

#define     ad7    (*(volatile union word_def_2 *) (0x03ce))       /* A/D register 7 */

#define     adtrgcon (*(volatile union byte_def *) (0x03d2))     /* A/D trigger control register */

#define     adstat0 (*(volatile union byte_def *) (0x03d3))      /* A/D convert status register 0 */

#define     adcon2 (*(volatile union byte_def *) (0x03d4))       /* A/D control register 2 */

#define     adcon0 (*(volatile union byte_def *) (0x03d6))       /* A/D control register 0 */

#define     adcon1 (*(volatile union byte_def *) (0x03d7))       /* A/D control register 1 */

#define     p0     (*(volatile union byte_def *) (0x03e0))       /* Port P0 register */

#define     p1     (*(volatile union byte_def *) (0x03e1))       /* Port P1 register */

#define     pd0    (*(volatile union byte_def *) (0x03e2))       /* Port P0 direction register */

#define     pd1    (*(volatile union byte_def *) (0x03e3))       /* Port P1 direction register */

#define     p2     (*(volatile union byte_def *) (0x03e4))       /* Port P2 register */

#define     p3     (*(volatile union byte_def *) (0x03e5))       /* Port P3 register */

#define     pd2    (*(volatile union byte_def *) (0x03e6))       /* Port P2 direction register */

#define     pd3    (*(volatile union byte_def *) (0x03e7))       /* Port P3 direction register */

#define     p6     (*(volatile union byte_def *) (0x03ec))       /* Port P6 register */

#define     p7     (*(volatile union byte_def *) (0x03ed))       /* Port P7 register */

#define     pd6    (*(volatile union byte_def *) (0x03ee))       /* Port P6 direction register */

#define     pd7    (*(volatile union byte_def *) (0x03ef))       /* Port P7 direction register */

#define     p8     (*(volatile union byte_def *) (0x03f0))       /* Port P8 register */

#define     p9     (*(volatile union byte_def *) (0x03f1))       /* Port P9 register */

#define     pd8    (*(volatile union byte_def *) (0x03f2))       /* Port P8 direction register */

#define     pd9    (*(volatile union byte_def *) (0x03f3))       /* Port P9 direction register */

#define     p10    (*(volatile union byte_def *) (0x03f4))       /* Port P10 register */

#define     pd10   (*(volatile union byte_def *) (0x03f6))       /* Port P10 direction register */

#define     pur0   (*(volatile union byte_def *) (0x03fc))       /* Pull-up control register 0 */

#define     pur1   (*(volatile union byte_def *) (0x03fd))       /* Pull-up control register 1 */

#define     pur2   (*(volatile union byte_def *) (0x03fe))       /* Pull-up control register 2 */

#define     pcr    (*(volatile union byte_def *) (0x03ff))       /* Port control register */

/********************************************************
*   declare SFR bit                                     *
********************************************************/
struct bit_def {
        char    b0:1;
        char    b1:1;
        char    b2:1;
        char    b3:1;
        char    b4:1;
        char    b5:1;
        char    b6:1;
        char    b7:1;
};
union byte_def{
    struct bit_def bit;
    char    byte;
};

/*------------------------------------------------------
    Processor mode register 0
------------------------------------------------------*/



#define     pm03        pm0.bit.b3     /* Software reset bit */

/*------------------------------------------------------
    Processor mode register 1
------------------------------------------------------*/



#define     pm10        pm1.bit.b0     /* Flash data block access bit */
#define     pm12        pm1.bit.b2     /* Watchdog timer function select bit */
#define     pm17        pm1.bit.b7     /* Wait bit */

/*------------------------------------------------------
    System clock control register 0
------------------------------------------------------*/



#define     cm00        cm0.bit.b0     /* Clock output function select bit */
#define     cm01        cm0.bit.b1     /* Clock output function select bit */
#define     cm02        cm0.bit.b2     /* WAIT Mode peripheral function clock stop bit */
#define     cm03        cm0.bit.b3     /* Xcin-Xcout drive capacity select bit */
#define     cm04        cm0.bit.b4     /* Port Xc select bit */
#define     cm05        cm0.bit.b5     /* Main clock stop bit */
#define     cm06        cm0.bit.b6     /* Main clock division select bit 0 */
#define     cm07        cm0.bit.b7     /* System clock select bit */

/*------------------------------------------------------
    System clock control register 1
------------------------------------------------------*/



#define     cm10        cm1.bit.b0     /* All clock stop control bit */
#define     cm11        cm1.bit.b1     /* System clock select bit 1 */
#define     cm15        cm1.bit.b5     /* Xin-Xout drive capacity select bit */
#define     cm16        cm1.bit.b6     /* Main clock division select bit 1 */
#define     cm17        cm1.bit.b7     /* Main clock division select bit 1 */

/*------------------------------------------------------
    Address match interrupt enable register
------------------------------------------------------*/



#define     aier0       aier.bit.b0    /* Address match interrupt 0 enable bit */
#define     aier1       aier.bit.b1    /* Address match interrupt 1 enable bit */

/*------------------------------------------------------
    Protect register
------------------------------------------------------*/



#define     prc0        prcr.bit.b0    /* Enable write to CM0,CM1,CM2,ROCR,PLC0 and PCLKR registers */
#define     prc1        prcr.bit.b1    /* Enable write to PM0,PM1,PM2,TB2SC,INVC0 and INVC1 registers */
#define     prc2        prcr.bit.b2    /* Enable write to PD9,PACR and S4C registers */
#define     prc3        prcr.bit.b3    /* Enable write to VCR2 and D4INT registers */

/*------------------------------------------------------
    Oscillation steop detection register
------------------------------------------------------*/



#define     cm20        cm2.bit.b0     /* Oscillation stop,reoscillation detection bit */
#define     cm21        cm2.bit.b1     /* System clock select bit 2 */
#define     cm22        cm2.bit.b2     /* Oscillation stop,reoscillation detection flag */
#define     cm23        cm2.bit.b3     /* Xin monitor flag */
#define     cm27        cm2.bit.b7     /* Operation select bit */

/*------------------------------------------------------
    Watchdog timer start register
------------------------------------------------------*/



/*------------------------------------------------------
    Watchdog timer control register
------------------------------------------------------*/



#define     wdc5        wdc.bit.b5     /* Cold start/warm start discrimination flag */
#define     wdc7        wdc.bit.b7     /* Prescaler select bit */

/*------------------------------------------------------
	Voltage detection register 1
------------------------------------------------------*/



#define     vcr13       vcr1.bit.b3    /* Voltage down monitor flag */

/*------------------------------------------------------
	Voltage detection register 2
------------------------------------------------------*/



#define     vcr25       vcr2.bit.b5    /* RAM retention limit detection monitor bit */
#define     vcr26       vcr2.bit.b6    /* Reset level monitor bit */
#define     vcr27       vcr2.bit.b7    /* Voltage down monitor bit */

/*------------------------------------------------------
	PLL control register 0
------------------------------------------------------*/



#define     plc00       plc0.bit.b0	/* PLL multiplying factor select bit */
#define     plc01       plc0.bit.b1	/* PLL multiplying factor select bit */
#define     plc02       plc0.bit.b2	/* PLL multiplying factor select bit */
#define     plc07       plc0.bit.b7	/* operation enable bit */

/*------------------------------------------------------
    Processor mode register 2
------------------------------------------------------*/



#define     pm20        pm2.bit.b0     /* Specifying wait when accessing SFR */
#define     pm21        pm2.bit.b1     /* System clock protective bit */
#define     pm22        pm2.bit.b2     /* WDT count source protective bit */
#define     pm24        pm2.bit.b4     /* P85/NMI configuration bit */

/*------------------------------------------------------
    CRC input register
------------------------------------------------------*/



/*------------------------------------------------------
    Voltage down detection interrupt register
------------------------------------------------------*/



#define     d40         d4int.bit.b0   /* Voltage down detection interrupt enable bit */
#define     d41         d4int.bit.b1   /* STOP mode deactivation control bit */
#define     d42         d4int.bit.b2   /* Voltage change detection flag */
#define     d43         d4int.bit.b3   /* WDT overflow detect flag */
#define     df0         d4int.bit.b4   /* Sampling clock select bit */
#define     df1         d4int.bit.b5   /* Sampling clock select bit */

/*------------------------------------------------------
Three-phase protect control register
------------------------------------------------------*/



#define     tprc0       tprc.bit.b0

/*------------------------------------------------------
    On-chip oscillator control register
------------------------------------------------------*/



#define     rocr0       rocr.bit.b0    /* Frequency select bit */
#define     rocr1       rocr.bit.b1    /*                      */
#define     rocr2       rocr.bit.b2    /* Divider select bit */
#define     rocr3       rocr.bit.b3    /*                    */

/*------------------------------------------------------
    Pin assignment control register
------------------------------------------------------*/



#define     pacr0       pacr.bit.b0    /* Pin enabling bit */
#define     pacr1       pacr.bit.b1    /* Pin enabling bit */
#define     pacr2       pacr.bit.b2    /* Pin enabling bit */
#define     u1map       pacr.bit.b7    /* UART1 pin remapping bit */

/*------------------------------------------------------
    Peripheral clock selec register
------------------------------------------------------*/



#define    pclk0        pclkr.bit.b0   /* Timers A,B clock select bit */
#define    pclk1        pclkr.bit.b1   /* SI/O clock select bit */

/*------------------------------------------------------
    I2C data shift register
------------------------------------------------------*/



/*------------------------------------------------------
    I2C address register
------------------------------------------------------*/



#define    sad0         s0d0.bit.b1
#define    sad1         s0d0.bit.b2
#define    sad2         s0d0.bit.b3
#define    sad3         s0d0.bit.b4
#define    sad4         s0d0.bit.b5
#define    sad5         s0d0.bit.b6
#define    sad6         s0d0.bit.b7

/*------------------------------------------------------
    I2C control register 0
------------------------------------------------------*/



#define    bc0          s1d0.bit.b0    /* Bit counter */
#define    bc1          s1d0.bit.b1    /* Bit counter */
#define    bc2          s1d0.bit.b2    /* Bit counter */
#define    es0          s1d0.bit.b3    /* I2C-Bus interface enable bit */
#define    als          s1d0.bit.b4    /* Data format selection bit */
#define    ihr          s1d0.bit.b6    /* I2C-Bus interface reset bit */
#define    tiss         s1d0.bit.b7    /* I2C-Bus interface pin input level selection bit */

/*------------------------------------------------------
    I2C clock control register
------------------------------------------------------*/



#define    ccr0         s20.bit.b0     /* SCL frequency control bits */
#define    ccr1         s20.bit.b1     /* SCL frequency control bits */
#define    ccr2         s20.bit.b2     /* SCL frequency control bits */
#define    ccr3         s20.bit.b3     /* SCL frequency control bits */
#define    ccr4         s20.bit.b4     /* SCL frequency control bits */
#define    fastmode     s20.bit.b5     /* SCL mode specification bit */
#define    ackbit       s20.bit.b6     /* ACK bit */
#define    ack          s20.bit.b7     /* ACK clock bit */

/*------------------------------------------------------
    I2C start/stop condition control register
------------------------------------------------------*/



#define    ssc0         s2d0.bit.b0    /* START/STOP condition setting bits */
#define    ssc1         s2d0.bit.b1    /* START/STOP condition setting bits */
#define    ssc2         s2d0.bit.b2    /* START/STOP condition setting bits */
#define    ssc3         s2d0.bit.b3    /* START/STOP condition setting bits */
#define    ssc4         s2d0.bit.b4    /* START/STOP condition setting bits */
#define    sip          s2d0.bit.b5    /* SCL/SDA interrupt pin polarity selection bit */
#define    sis          s2d0.bit.b6    /* SCL/SDA interrupt pin selection bit */
#define    stspsel      s2d0.bit.b7    /* START/STOP condition generation selection bit */

/*------------------------------------------------------
    I2C control register 1
------------------------------------------------------*/



#define    sim          s3d0.bit.b0    /* The interrupt enable bit for STOP condition detection */
#define    wit          s3d0.bit.b1    /* The interrupt enable bit for data receive completion */
#define    ped          s3d0.bit.b2    /* SDA/Port function switching bit */
#define    pec          s3d0.bit.b3    /* SCL/Port function switching bit */
#define    sdam         s3d0.bit.b4    /* The logic value monitor bit of SDA output */
#define    sclm         s3d0.bit.b5    /* The logic value monitor bit of SCL output */
#define    ick0         s3d0.bit.b6    /* I2C system clock selection bits */
#define    ick1         s3d0.bit.b7    /* I2C system clock selection bits */

/*------------------------------------------------------
    I2C control register 2
------------------------------------------------------*/



#define    toe			s4d0.bit.b0    /* Timeout detection function enable bit */
#define    tof			s4d0.bit.b1    /* Timeout detection flag */
#define    tosel		s4d0.bit.b2    /* Timeout detection time selection bit */
#define    ick2			s4d0.bit.b3    /* I2C system clock selection bits */
#define    ick3			s4d0.bit.b4    /* I2C system clock selection bits */
#define    ick4			s4d0.bit.b5    /* I2C system clock selection bits */
#define    scpin		s4d0.bit.b7    /* STOP condition detection interrupt request bit */

/*------------------------------------------------------
    I2C status register
------------------------------------------------------*/



#define    lrb          s10.bit.b0     /* Last receive bit */
#define    adr0         s10.bit.b1     /* General call detection flag */
#define    aas          s10.bit.b2     /* Slave address comparison flag */
#define    al           s10.bit.b3     /* Arbitration lost detection flag */
#define    pin          s10.bit.b4     /* I2C-Bus interface interrupt request bit */
#define    bb           s10.bit.b5     /* Bus busy flag */
#define    trx          s10.bit.b6     /* Communication mode specifiation bits */
#define    mst          s10.bit.b7     /* Communication mode specifiation bits */

/*------------------------------------------------------
    Base timer control register 0
------------------------------------------------------*/



#define     bck0_g1bcr0     g1bcr0.bit.b0 /* Count source select bit */
#define     bck1_g1bcr0     g1bcr0.bit.b1 /* Count source select bit */
#define     rst4_g1bcr0     g1bcr0.bit.b2 /* Base timer reset cause select bit */
#define     ch7insel_g1bcr0 g1bcr0.bit.b6 /* Channel 7 input select bit */
#define     it_g1bcr0       g1bcr0.bit.b7 /* Base timer overflow select bit */

/*------------------------------------------------------
    Base timer control register 1
------------------------------------------------------*/



#define     rst1_g1bcr1  g1bcr1.bit.b1  /* Base timer reset cause select bit 1 */
#define     rst2_g1bcr1  g1bcr1.bit.b2  /* Base timer reset cause select bit 2 */
#define     bts_g1bcr1   g1bcr1.bit.b4  /* Base timer start bit */
#define     ud0_g1bcr1   g1bcr1.bit.b5  /* Counter increment/decrement control bit */
#define     ud1_g1bcr1   g1bcr1.bit.b6  /* Counter increment/decrement control bit */

/*------------------------------------------------------
    Time measurement prescale register 6
------------------------------------------------------*/



/*------------------------------------------------------
    Time measurement prescale register 7
------------------------------------------------------*/



/*------------------------------------------------------
    Function enable register
------------------------------------------------------*/



#define     ife0_g1fe    g1fe.bit.b0   /* Channel 0 function enable bit */
#define     ife1_g1fe    g1fe.bit.b1   /* Channel 1 function enable bit */
#define     ife2_g1fe    g1fe.bit.b2   /* Channel 2 function enable bit */
#define     ife3_g1fe    g1fe.bit.b3   /* Channel 3 function enable bit */
#define     ife4_g1fe    g1fe.bit.b4   /* Channel 4 function enable bit */
#define     ife5_g1fe    g1fe.bit.b5   /* Channel 5 function enable bit */
#define     ife6_g1fe    g1fe.bit.b6   /* Channel 6 function enable bit */
#define     ife7_g1fe    g1fe.bit.b7   /* Channel 7 function enable bit */

/*------------------------------------------------------
    Function select register
------------------------------------------------------*/



#define     fsc0_g1fs    g1fs.bit.b0   /* Channel 0 time measurement/waveform generation function select bit */
#define     fsc1_g1fs    g1fs.bit.b1   /* Channel 1 time measurement/waveform generation function select bit */
#define     fsc2_g1fs    g1fs.bit.b2   /* Channel 2 time measurement/waveform generation function select bit */
#define     fsc3_g1fs    g1fs.bit.b3   /* Channel 3 time measurement/waveform generation function select bit */
#define     fsc4_g1fs    g1fs.bit.b4   /* Channel 4 time measurement/waveform generation function select bit */
#define     fsc5_g1fs    g1fs.bit.b5   /* Channel 5 time measurement/waveform generation function select bit */
#define     fsc6_g1fs    g1fs.bit.b6   /* Channel 6 time measurement/waveform generation function select bit */
#define     fsc7_g1fs    g1fs.bit.b7   /* Channel 7 time measurement/waveform generation function select bit */

/*------------------------------------------------------
    Divider register
------------------------------------------------------*/



/*------------------------------------------------------
    Interruput request register
------------------------------------------------------*/



#define     g1ir0        g1ir.bit.b0   /* Interrupt request Ch 0 */
#define     g1ir1        g1ir.bit.b1   /* Interrupt request Ch 1 */
#define     g1ir2        g1ir.bit.b2   /* Interrupt request Ch 2 */
#define     g1ir3        g1ir.bit.b3   /* Interrupt request Ch 3 */
#define     g1ir4        g1ir.bit.b4   /* Interrupt request Ch 4 */
#define     g1ir5        g1ir.bit.b5   /* Interrupt request Ch 5 */
#define     g1ir6        g1ir.bit.b6   /* Interrupt request Ch 6 */
#define     g1ir7        g1ir.bit.b7   /* Interrupt request Ch 7 */

/*------------------------------------------------------
    Interruput enable register 0
------------------------------------------------------*/



#define     g1ie00       g1ie0.bit.b0  /* Interrupt enable(*(volatile union byte_def *) (0x0 C)) 0 */
#define     g1ie01       g1ie0.bit.b1  /* Interrupt enable(*(volatile union byte_def *) (0x0 C)) 1 */
#define     g1ie02       g1ie0.bit.b2  /* Interrupt enable(*(volatile union byte_def *) (0x0 C)) 2 */
#define     g1ie03       g1ie0.bit.b3  /* Interrupt enable(*(volatile union byte_def *) (0x0 C)) 3 */
#define     g1ie04       g1ie0.bit.b4  /* Interrupt enable(*(volatile union byte_def *) (0x0 C)) 4 */
#define     g1ie05       g1ie0.bit.b5  /* Interrupt enable(*(volatile union byte_def *) (0x0 C)) 5 */
#define     g1ie06       g1ie0.bit.b6  /* Interrupt enable(*(volatile union byte_def *) (0x0 C)) 6 */
#define     g1ie07       g1ie0.bit.b7  /* Interrupt enable(*(volatile union byte_def *) (0x0 C)) 7 */

/*------------------------------------------------------
    Interruput enable register 1
------------------------------------------------------*/



#define     g1ie10       g1ie1.bit.b0  /* Interrupt enable 1 Ch 0 */
#define     g1ie11       g1ie1.bit.b1  /* Interrupt enable 1 Ch 1 */
#define     g1ie12       g1ie1.bit.b2  /* Interrupt enable 1 Ch 2 */
#define     g1ie13       g1ie1.bit.b3  /* Interrupt enable 1 Ch 3 */
#define     g1ie14       g1ie1.bit.b4  /* Interrupt enable 1 Ch 4 */
#define     g1ie15       g1ie1.bit.b5  /* Interrupt enable 1 Ch 5 */
#define     g1ie16       g1ie1.bit.b6  /* Interrupt enable 1 Ch 6 */
#define     g1ie17       g1ie1.bit.b7  /* Interrupt enable 1 Ch 7 */

/*------------------------------------------------------
    NMI digital debounce register
------------------------------------------------------*/



/*------------------------------------------------------
    P17 digital debounce register
------------------------------------------------------*/



/*------------------------------------------------------
    Three-phase PWM control regester 0
------------------------------------------------------*/



#define     inv00       invc0.bit.b0   /* Effective interrupt output polarity select bit */
#define     inv01       invc0.bit.b1   /* Effective interrupt output specification bit */
#define     inv02       invc0.bit.b2   /* Mode select bit */
#define     inv03       invc0.bit.b3   /* Output control bit */
#define     inv04       invc0.bit.b4   /* Positive and negative phases concurrent output disable bit */
#define     inv05       invc0.bit.b5   /* Positive and negative phases concurrent output detect flag */
#define     inv06       invc0.bit.b6   /* Modulation mode select bit */
#define     inv07       invc0.bit.b7   /* Software trigger select bit */

/*------------------------------------------------------
    Three-phase PWM control regester 1
------------------------------------------------------*/



#define     inv10       invc1.bit.b0   /* Timer A1,A2,A4 start trigger signal select bit */
#define     inv11       invc1.bit.b1   /* Timer A1-1,A2-1,A4-1 control bit */
#define     inv12       invc1.bit.b2   /* Dead time timer count source select bit */
#define     inv13       invc1.bit.b3   /* Carrier wave detect flag */
#define     inv14       invc1.bit.b4   /* Output polarity control bit */
#define     inv15       invc1.bit.b5   /* Dead time invalid bit */
#define     inv16       invc1.bit.b6   /* Dead time timer trigger select bit */

/*------------------------------------------------------
    Three-phase output buffer register 0
------------------------------------------------------*/



#define     du0         idb0.bit.b0    /* U  phase output buffer 0 */
#define     dub0        idb0.bit.b1    /* U~ phase output buffer 0 */
#define     dv0         idb0.bit.b2    /* V  phase output buffer 0 */
#define     dvb0        idb0.bit.b3    /* V~ phase output buffer 0 */
#define     dw0         idb0.bit.b4    /* W  phase output buffer 0 */
#define     dwb0        idb0.bit.b5    /* W~ phase output buffer 0 */

/*------------------------------------------------------
    Three-phase output buffer register 1
------------------------------------------------------*/



#define     du1         idb1.bit.b0    /* U  phase output buffer 1 */
#define     dub1        idb1.bit.b1    /* U~ phase output buffer 1 */
#define     dv1         idb1.bit.b2    /* V  phase output buffer 1 */
#define     dvb1        idb1.bit.b3    /* V~ phase output buffer 1 */
#define     dw1         idb1.bit.b4    /* W  phase output buffer 1 */
#define     dwb1        idb1.bit.b5    /* W~ phase output buffer 1 */

/*------------------------------------------------------
     Dead time timer ; Use "MOV" instruction when writing to this register.
------------------------------------------------------*/



/*------------------------------------------------------------------
     Timer B2 interrupt occurrences frequency set counter
     ; Use "MOV" instruction when writing to this register.
-------------------------------------------------------------------*/



/*------------------------------------------------------
    Position-data-retain function register
------------------------------------------------------*/



#define     pdrw        pdrf.bit.b0    /* W-phase position data retain bit */
#define     pdrv        pdrf.bit.b1    /* V-phase position data retain bit */
#define     pdru        pdrf.bit.b2    /* U-phase position data retain bit */
#define     pdrt        pdrf.bit.b3    /* Retain-trigger polarity select bit */

/*------------------------------------------------------
    Port function control register
------------------------------------------------------*/



#define     pfc0        pfcr.bit.b0
#define     pfc1        pfcr.bit.b1
#define     pfc2        pfcr.bit.b2
#define     pfc3        pfcr.bit.b3
#define     pfc4        pfcr.bit.b4
#define     pfc5        pfcr.bit.b5

/*------------------------------------------------------
     ifsr2a
------------------------------------------------------*/



#define     ifsr20      ifsr2a.bit.b0  /* Reserved bit */
#define     ifsr21      ifsr2a.bit.b1  /* Interrupt request cause select bit */
#define     ifsr22      ifsr2a.bit.b2  /* Interrupt request cause select bit */
#define     ifsr26      ifsr2a.bit.b6  /* Interrupt request cause select bit */
#define     ifsr27      ifsr2a.bit.b7  /* Interrupt request cause select bit */

/*------------------------------------------------------
     ifsr
------------------------------------------------------*/



#define     ifsr0       ifsr.bit.b0     /* INT0~ interrupt polarity switching bit */
#define     ifsr1       ifsr.bit.b1     /* INT1~ interrupt polarity switching bit */
#define     ifsr2       ifsr.bit.b2     /* INT2~ interrupt polarity switching bit */
#define     ifsr3       ifsr.bit.b3     /* INT3~ interrupt polarity switching bit */
#define     ifsr4       ifsr.bit.b4     /* INT4~ interrupt polarity switching bit */
#define     ifsr5       ifsr.bit.b5     /* INT5~ interrupt polarity switching bit */
#define     ifsr6       ifsr.bit.b6     /* Interrupt request cause select bit */
#define     ifsr7       ifsr.bit.b7     /* Interrupt request cause select bit */

/*------------------------------------------------------
    SI/O3 transmit/receive registers
------------------------------------------------------*/



/*------------------------------------------------------
    SI/O3 bit rate generator ; Use "MOV" instruction when writing to these registers.
------------------------------------------------------*/



/*------------------------------------------------------
    SI/O4 transmit/receive registers
------------------------------------------------------*/



/*------------------------------------------------------
    SI/O4 bit rate generator ; Use "MOV" instruction when writing to these registers.
------------------------------------------------------*/



/*------------------------------------------------------
    UART2 special mode register 4
------------------------------------------------------*/



#define     stareq_u2smr4  u2smr4.bit.b0  /* Start condition generate bit */
#define     rstareq_u2smr4 u2smr4.bit.b1  /* Restart condition generate bit */
#define     stpreq_u2smr4  u2smr4.bit.b2  /* Stop condition generate bit */
#define     stspsel_u2smr4 u2smr4.bit.b3  /* SCL,SDA output select bit */
#define     ackd_u2smr4    u2smr4.bit.b4  /* ACK data bit */
#define     ackc_u2smr4    u2smr4.bit.b5  /* ACK data output enable bit */
#define     sclhi_u2smr4   u2smr4.bit.b6  /* SCL output stop enable bit */
#define     swc9_u2smr4    u2smr4.bit.b7  /* SCL wait bit 3 */

/*------------------------------------------------------
    UART2 special mode register 3
------------------------------------------------------*/



#define     ckph_u2smr3    u2smr3.bit.b1   /* Clock phase set bit */
#define     nodc_u2smr3    u2smr3.bit.b3   /* Clock output select bit */
#define     dl0_u2smr3     u2smr3.bit.b5   /* SDA digital delay setup bit */
#define     dl1_u2smr3     u2smr3.bit.b6   /* SDA digital delay setup bit */
#define     dl2_u2smr3     u2smr3.bit.b7   /* SDA digital delay setup bit */

/*------------------------------------------------------
    UART2 special mode register 2
------------------------------------------------------*/



#define     iicm2_u2smr2   u2smr2.bit.b0  /* IIC mode selection bit 2 */
#define     csc_u2smr2     u2smr2.bit.b1  /* Clock-synchronous bit */
#define     swc_u2smr2     u2smr2.bit.b2  /* SCL wait output bit */
#define     als_u2smr2     u2smr2.bit.b3  /* SDA output stop bit */
#define     stac_u2smr2    u2smr2.bit.b4  /* UART2 initialization bit */
#define     swc2_u2smr2    u2smr2.bit.b5  /* SCL wait output bit 2 */
#define     sdhi_u2smr2    u2smr2.bit.b6  /* SDA output disable bit */

/*------------------------------------------------------
    UART2 special mode register
------------------------------------------------------*/



#define     iicm_u2smr     u2smr.bit.b0   /* IIC mode selection bit */
#define     abc_u2smr      u2smr.bit.b1   /* Arbitration lost detecting flag control bit */
#define     bbs_u2smr      u2smr.bit.b2   /* Bus busy flag */
#define     abscs_u2smr    u2smr.bit.b4   /* Bus collision detect sampling clock select bit */
#define     acse_u2smr     u2smr.bit.b5   /* Auto clear function select bit of transmit enable bit */
#define     sss_u2smr      u2smr.bit.b6   /* Transmit start condition select bit */

/*------------------------------------------------------
    UART2 baud rate generation register ; Use "MOV" instruction when writing to these registers.
------------------------------------------------------*/



/*------------------------------------------------------
    UART2 transmit/receive control register 1
------------------------------------------------------*/



#define     te_u2c1     u2c1.bit.b0    /* Transmit enable bit */
#define     ti_u2c1     u2c1.bit.b1    /* Transmit buffer empty flag */
#define     re_u2c1     u2c1.bit.b2    /* Receive enable bit */
#define     ri_u2c1     u2c1.bit.b3    /* Receive complete flag */
#define     u2irs       u2c1.bit.b4    /* UART2 transmit interrupt cause select bit */
#define     u2rrm       u2c1.bit.b5    /* UART2 continuous receive mode enable bit */
#define     u2lch       u2c1.bit.b6    /* Data logic select bit */
#define     u2ere       u2c1.bit.b7    /* Error signal output enable bit */

/*------------------------------------------------------
    Count start flag
------------------------------------------------------*/



#define     ta0s        tabsr.bit.b0   /* Timer A0 count start flag */
#define     ta1s        tabsr.bit.b1   /* Timer A1 count start flag */
#define     ta2s        tabsr.bit.b2   /* Timer A2 count start flag */
#define     ta3s        tabsr.bit.b3   /* Timer A3 count start flag */
#define     ta4s        tabsr.bit.b4   /* Timer A4 count start flag */
#define     tb0s        tabsr.bit.b5   /* Timer B0 count start flag */
#define     tb1s        tabsr.bit.b6   /* Timer B1 count start flag */
#define     tb2s        tabsr.bit.b7   /* Timer B2 count start flag */

/*------------------------------------------------------
    Clock prescaler reset flag
------------------------------------------------------*/



#define     cpsr        cpsrf.bit.b7   /* Clock prescaler reset flag */

/*------------------------------------------------------
    One-shot start flag
------------------------------------------------------*/



#define     ta0os       onsf.bit.b0    /* Timer A0 one-shot start flag */
#define     ta1os       onsf.bit.b1    /* Timer A1 one-shot start flag */
#define     ta2os       onsf.bit.b2    /* Timer A2 one-shot start flag */
#define     ta3os       onsf.bit.b3    /* Timer A3 one-shot start flag */
#define     ta4os       onsf.bit.b4    /* Timer A4 one-shot start flag */
#define     tazie       onsf.bit.b5    /* Z-phase input enable bit */
#define     ta0tgl      onsf.bit.b6    /* Timer A0 event/trigger select bit */
#define     ta0tgh      onsf.bit.b7    /* Timer A0 event/trigger select bit */

/*------------------------------------------------------
    Trigger select register
------------------------------------------------------*/



#define     ta1tgl      trgsr.bit.b0   /* Timer A1 event/trigger select bit */
#define     ta1tgh      trgsr.bit.b1   /* Timer A1 event/trigger select bit */
#define     ta2tgl      trgsr.bit.b2   /* Timer A2 event/trigger select bit */
#define     ta2tgh      trgsr.bit.b3   /* Timer A2 event/trigger select bit */
#define     ta3tgl      trgsr.bit.b4   /* Timer A3 event/trigger select bit */
#define     ta3tgh      trgsr.bit.b5   /* Timer A3 event/trigger select bit */
#define     ta4tgl      trgsr.bit.b6   /* Timer A4 event/trigger select bit */
#define     ta4tgh      trgsr.bit.b7   /* Timer A4 event/trigger select bit */

/*--------------------------------------------------------
    Up/down flag ; Use "MOV" instruction to write to this register.
--------------------------------------------------------*/

/*------------------------------------------------------
    Timer B2 special mode register
------------------------------------------------------*/



#define     pwcon          tb2sc.bit.b0   /* Timer B2 reload timing switching bit */
#define     ivpcr1         tb2sc.bit.b1   /* Three phase output port ~SD control bit 1 */
#define     tb0en          tb2sc.bit.b2   /* Timer B0 operation mode select bit */
#define     tb1en          tb2sc.bit.b3   /* Timer B1 operation mode select bit */
#define     tb2sel         tb2sc.bit.b4   /* Trigger select bit */
#define     tb0trig        tb2sc.bit.b5   /* Timer B0 A/D Trigger select bit */
#define     tb1trig        tb2sc.bit.b6   /* Timer B1 A/D Trigger select bit */

/*------------------------------------------------------
    UART0 baud rate generation register ; Use "MOV" instruction when writing to these registers.
------------------------------------------------------*/



/*------------------------------------------------------
    UART1 baud rate generation register ; Use "MOV" instruction when writing to these registers.
------------------------------------------------------*/



/*------------------------------------------------------
    UART transmit/receive control register 2
------------------------------------------------------*/



#define     u0irs       ucon.bit.b0    /* UART0 transmit interrupt cause select bit */
#define     u1irs       ucon.bit.b1    /* UART1 transmit interrupt cause select bit */
#define     u0rrm       ucon.bit.b2    /* UART0 continuous receive mode enable bit */
#define     u1rrm       ucon.bit.b3    /* UART1 continuous receive mode enable bit */
#define     clkmd0      ucon.bit.b4    /* CLK/CLKS select bit 0 */
#define     clkmd1      ucon.bit.b5    /* CLK/CLKS select bit 1 */
#define     rcsp        ucon.bit.b6    /* Separate RTS/CTS bit */

/*------------------------------------------------------
    crc mode register
------------------------------------------------------*/



#define     crcps        crcmr.bit.b0
#define     crcms        crcmr.bit.b7

/*------------------------------------------------------
    AD trigger control register
------------------------------------------------------*/



#define     sse        adtrgcon.bit.b0 /* A/D operation mode select bit 2 */
#define     dte        adtrgcon.bit.b1 /* A/D operation mode select bit 3 */
#define     hptrg0     adtrgcon.bit.b2 /* AN0 trigger select bit */
#define     hptrg1     adtrgcon.bit.b3 /* AN1 trigger select bit */

/*------------------------------------------------------
    AD convert status register 0
------------------------------------------------------*/



#define     aderr0      adstat0.bit.b0 /* AN1 trigger status flag */
#define     aderr1      adstat0.bit.b1 /* Conversion termination flag */
#define     adtcsf      adstat0.bit.b3 /* Delayed triggered sweep status flag */
#define     adstt0      adstat0.bit.b4 /* AN0 conversion status flag */
#define     adstt1      adstat0.bit.b5 /* AN1 conversion status flag */
#define     adstrt0     adstat0.bit.b6 /* AN0 conversion completion status flag */
#define     adstrt1     adstat0.bit.b7 /* AN1 conversion completion status flag */

/*------------------------------------------------------
    A/D control register 2
------------------------------------------------------*/



#define     smp         adcon2.bit.b0  /* A/D conversion method select bit */
#define     adgsel0     adcon2.bit.b1  /* AD input group select bit */
#define     adgsel1     adcon2.bit.b2  /* AD input group select bit */
#define     cks2        adcon2.bit.b4  /* Frequency select bit 2 */
#define     trg1        adcon2.bit.b5  /* Trigger select bit */

/*------------------------------------------------------
    A/D control register 0
------------------------------------------------------*/



#define     ch0         adcon0.bit.b0  /* Analog input pin select bit */
#define     ch1         adcon0.bit.b1  /* Analog input pin select bit */
#define     ch2         adcon0.bit.b2  /* Analog input pin select bit */
#define     md0         adcon0.bit.b3  /* A/D operation mode select bit 0 */
#define     md1         adcon0.bit.b4  /* A/D operation mode select bit 0 */
#define     trg         adcon0.bit.b5  /* Trigger select bit */
#define     adst        adcon0.bit.b6  /* A/D conversion start flag */
#define     cks0        adcon0.bit.b7  /* Frequency select bit 0 */

/*------------------------------------------------------
    A/D control register 1
------------------------------------------------------*/



#define     scan0       adcon1.bit.b0  /* A/D sweep pin select bit */
#define     scan1       adcon1.bit.b1  /* A/D sweep pin select bit */
#define     md2         adcon1.bit.b2  /* A/D operation mode select bit 1 */
#define     bits        adcon1.bit.b3  /* 8/10-bit mode select bit */
#define     cks1        adcon1.bit.b4  /* Frequency select bit 1 */
#define     vcut        adcon1.bit.b5  /* Vref connect bit */

/*------------------------------------------------------
    Port P0 register
------------------------------------------------------*/



#define     p0_0        p0.bit.b0      /* Port P00 register */
#define     p0_1        p0.bit.b1      /* Port P01 register */
#define     p0_2        p0.bit.b2      /* Port P02 register */
#define     p0_3        p0.bit.b3      /* Port P03 register */
#define     p0_4        p0.bit.b4      /* Port P04 register */
#define     p0_5        p0.bit.b5      /* Port P05 register */
#define     p0_6        p0.bit.b6      /* Port P06 register */
#define     p0_7        p0.bit.b7      /* Port P07 register */

/*------------------------------------------------------
    Port P1 register
------------------------------------------------------*/



#define     p1_0        p1.bit.b0      /* Port P10 register */
#define     p1_1        p1.bit.b1      /* Port P11 register */
#define     p1_2        p1.bit.b2      /* Port P12 register */
#define     p1_3        p1.bit.b3      /* Port P13 register */
#define     p1_4        p1.bit.b4      /* Port P14 register */
#define     p1_5        p1.bit.b5      /* Port P15 register */
#define     p1_6        p1.bit.b6      /* Port P16 register */
#define     p1_7        p1.bit.b7      /* Port P17 register */

/*------------------------------------------------------
    Port P0 direction register
------------------------------------------------------*/



#define     pd0_0       pd0.bit.b0     /* Port P00 direction register */
#define     pd0_1       pd0.bit.b1     /* Port P01 direction register */
#define     pd0_2       pd0.bit.b2     /* Port P02 direction register */
#define     pd0_3       pd0.bit.b3     /* Port P03 direction register */
#define     pd0_4       pd0.bit.b4     /* Port P04 direction register */
#define     pd0_5       pd0.bit.b5     /* Port P05 direction register */
#define     pd0_6       pd0.bit.b6     /* Port P06 direction register */
#define     pd0_7       pd0.bit.b7     /* Port P07 direction register */

/*------------------------------------------------------
    Port P1 direction register
------------------------------------------------------*/



#define     pd1_0       pd1.bit.b0     /* Port P10 direction register */
#define     pd1_1       pd1.bit.b1     /* Port P11 direction register */
#define     pd1_2       pd1.bit.b2     /* Port P12 direction register */
#define     pd1_3       pd1.bit.b3     /* Port P13 direction register */
#define     pd1_4       pd1.bit.b4     /* Port P14 direction register */
#define     pd1_5       pd1.bit.b5     /* Port P15 direction register */
#define     pd1_6       pd1.bit.b6     /* Port P16 direction register */
#define     pd1_7       pd1.bit.b7     /* Port P17 direction register */

/*------------------------------------------------------
    Port P2 register
------------------------------------------------------*/



#define     p2_0        p2.bit.b0      /* Port P20 register */
#define     p2_1        p2.bit.b1      /* Port P21 register */
#define     p2_2        p2.bit.b2      /* Port P22 register */
#define     p2_3        p2.bit.b3      /* Port P23 register */
#define     p2_4        p2.bit.b4      /* Port P24 register */
#define     p2_5        p2.bit.b5      /* Port P25 register */
#define     p2_6        p2.bit.b6      /* Port P26 register */
#define     p2_7        p2.bit.b7      /* Port P27 register */

/*------------------------------------------------------
    Port P3 register
------------------------------------------------------*/



#define     p3_0        p3.bit.b0      /* Port P30 register */
#define     p3_1        p3.bit.b1      /* Port P31 register */
#define     p3_2        p3.bit.b2      /* Port P32 register */
#define     p3_3        p3.bit.b3      /* Port P33 register */
#define     p3_4        p3.bit.b4      /* Port P34 register */
#define     p3_5        p3.bit.b5      /* Port P35 register */
#define     p3_6        p3.bit.b6      /* Port P36 register */
#define     p3_7        p3.bit.b7      /* Port P37 register */

/*------------------------------------------------------
    Port P2 direction register
------------------------------------------------------*/



#define     pd2_0       pd2.bit.b0     /* Port P20 direction register */
#define     pd2_1       pd2.bit.b1     /* Port P21 direction register */
#define     pd2_2       pd2.bit.b2     /* Port P22 direction register */
#define     pd2_3       pd2.bit.b3     /* Port P23 direction register */
#define     pd2_4       pd2.bit.b4     /* Port P24 direction register */
#define     pd2_5       pd2.bit.b5     /* Port P25 direction register */
#define     pd2_6       pd2.bit.b6     /* Port P26 direction register */
#define     pd2_7       pd2.bit.b7     /* Port P27 direction register */

/*------------------------------------------------------
    Port P3 direction register
------------------------------------------------------*/



#define     pd3_0       pd3.bit.b0     /* Port P30 direction register */
#define     pd3_1       pd3.bit.b1     /* Port P31 direction register */
#define     pd3_2       pd3.bit.b2     /* Port P32 direction register */
#define     pd3_3       pd3.bit.b3     /* Port P33 direction register */
#define     pd3_4       pd3.bit.b4     /* Port P34 direction register */
#define     pd3_5       pd3.bit.b5     /* Port P35 direction register */
#define     pd3_6       pd3.bit.b6     /* Port P36 direction register */
#define     pd3_7       pd3.bit.b7     /* Port P37 direction register */

/*------------------------------------------------------
    Port P6 register
------------------------------------------------------*/



#define     p6_0        p6.bit.b0      /* Port P60 register */
#define     p6_1        p6.bit.b1      /* Port P61 register */
#define     p6_2        p6.bit.b2      /* Port P62 register */
#define     p6_3        p6.bit.b3      /* Port P63 register */
#define     p6_4        p6.bit.b4      /* Port P64 register */
#define     p6_5        p6.bit.b5      /* Port P65 register */
#define     p6_6        p6.bit.b6      /* Port P66 register */
#define     p6_7        p6.bit.b7      /* Port P67 register */

/*------------------------------------------------------
    Port P7 register
------------------------------------------------------*/



#define     p7_0        p7.bit.b0      /* Port P70 register */
#define     p7_1        p7.bit.b1      /* Port P71 register */
#define     p7_2        p7.bit.b2      /* Port P72 register */
#define     p7_3        p7.bit.b3      /* Port P73 register */
#define     p7_4        p7.bit.b4      /* Port P74 register */
#define     p7_5        p7.bit.b5      /* Port P75 register */
#define     p7_6        p7.bit.b6      /* Port P76 register */
#define     p7_7        p7.bit.b7      /* Port P77 register */

/*------------------------------------------------------
    Port P6 direction register
------------------------------------------------------*/



#define     pd6_0       pd6.bit.b0     /* Port P60 direction register */
#define     pd6_1       pd6.bit.b1     /* Port P61 direction register */
#define     pd6_2       pd6.bit.b2     /* Port P62 direction register */
#define     pd6_3       pd6.bit.b3     /* Port P63 direction register */
#define     pd6_4       pd6.bit.b4     /* Port P64 direction register */
#define     pd6_5       pd6.bit.b5     /* Port P65 direction register */
#define     pd6_6       pd6.bit.b6     /* Port P66 direction register */
#define     pd6_7       pd6.bit.b7     /* Port P67 direction register */

/*------------------------------------------------------
    Port P7 direction register
------------------------------------------------------*/



#define     pd7_0       pd7.bit.b0     /* Port P70 direction register */
#define     pd7_1       pd7.bit.b1     /* Port P71 direction register */
#define     pd7_2       pd7.bit.b2     /* Port P72 direction register */
#define     pd7_3       pd7.bit.b3     /* Port P73 direction register */
#define     pd7_4       pd7.bit.b4     /* Port P74 direction register */
#define     pd7_5       pd7.bit.b5     /* Port P75 direction register */
#define     pd7_6       pd7.bit.b6     /* Port P76 direction register */
#define     pd7_7       pd7.bit.b7     /* Port P77 direction register */

/*------------------------------------------------------
    Port P8 register
------------------------------------------------------*/



#define     p8_0        p8.bit.b0      /* Port P80 register */
#define     p8_1        p8.bit.b1      /* Port P81 register */
#define     p8_2        p8.bit.b2      /* Port P82 register */
#define     p8_3        p8.bit.b3      /* Port P83 register */
#define     p8_4        p8.bit.b4      /* Port P84 register */
#define     p8_5        p8.bit.b5      /* Port P85 register */
#define     p8_6        p8.bit.b6      /* Port P86 register */
#define     p8_7        p8.bit.b7      /* Port P87 register */

/*------------------------------------------------------
    Port P9 register
------------------------------------------------------*/



#define     p9_0        p9.bit.b0      /* Port P90 register */
#define     p9_1        p9.bit.b1      /* Port P91 register */
#define     p9_2        p9.bit.b2      /* Port P92 register */
#define     p9_3        p9.bit.b3      /* Port P93 register */
#define     p9_5        p9.bit.b5      /* Port P95 register */
#define     p9_6        p9.bit.b6      /* Port P96 register */
#define     p9_7        p9.bit.b7      /* Port P97 register */

/*------------------------------------------------------
    Port P8 direction register
------------------------------------------------------*/



#define     pd8_0       pd8.bit.b0     /* Port P80 direction register */
#define     pd8_1       pd8.bit.b1     /* Port P81 direction register */
#define     pd8_2       pd8.bit.b2     /* Port P82 direction register */
#define     pd8_3       pd8.bit.b3     /* Port P83 direction register */
#define     pd8_4       pd8.bit.b4     /* Port P84 direction register */
#define     pd8_6       pd8.bit.b6     /* Port P86 direction register */
#define     pd8_7       pd8.bit.b7     /* Port P87 direction register */

/*------------------------------------------------------
    Port P9 direction register
------------------------------------------------------*/



#define     pd9_0       pd9.bit.b0     /* Port P90 direction register */
#define     pd9_1       pd9.bit.b1     /* Port P91 direction register */
#define     pd9_2       pd9.bit.b2     /* Port P92 direction register */
#define     pd9_3       pd9.bit.b3     /* Port P93 direction register */
#define     pd9_5       pd9.bit.b5     /* Port P95 direction register */
#define     pd9_6       pd9.bit.b6     /* Port P96 direction register */
#define     pd9_7       pd9.bit.b7     /* Port P97 direction register */

/*------------------------------------------------------
    Port P10 register
------------------------------------------------------*/



#define     p10_0       p10.bit.b0     /* Port P100 register */
#define     p10_1       p10.bit.b1     /* Port P101 register */
#define     p10_2       p10.bit.b2     /* Port P102 register */
#define     p10_3       p10.bit.b3     /* Port P103 register */
#define     p10_4       p10.bit.b4     /* Port P104 register */
#define     p10_5       p10.bit.b5     /* Port P105 register */
#define     p10_6       p10.bit.b6     /* Port P106 register */
#define     p10_7       p10.bit.b7     /* Port P107 register */

/*------------------------------------------------------
    Port P10 direction register
------------------------------------------------------*/



#define     pd10_0      pd10.bit.b0    /* Port P100 direction register */
#define     pd10_1      pd10.bit.b1    /* Port P101 direction register */
#define     pd10_2      pd10.bit.b2    /* Port P102 direction register */
#define     pd10_3      pd10.bit.b3    /* Port P103 direction register */
#define     pd10_4      pd10.bit.b4    /* Port P104 direction register */
#define     pd10_5      pd10.bit.b5    /* Port P105 direction register */
#define     pd10_6      pd10.bit.b6    /* Port P106 direction register */
#define     pd10_7      pd10.bit.b7    /* Port P107 direction register */

/*------------------------------------------------------
    Pull-up control register 0
------------------------------------------------------*/



#define     pu00        pur0.bit.b0    /* P00 to P03 pull-up */
#define     pu01        pur0.bit.b1    /* P04 to P07 pull-up */
#define     pu02        pur0.bit.b2    /* P10 to P13 pull-up */
#define     pu03        pur0.bit.b3    /* P14 to P17 pull-up */
#define     pu04        pur0.bit.b4    /* P20 to P23 pull-up */
#define     pu05        pur0.bit.b5    /* P24 to P27 pull-up */
#define     pu06        pur0.bit.b6    /* P30 to P33 pull-up */
#define     pu07        pur0.bit.b7    /* P34 to P37 pull-up */

/*------------------------------------------------------
    Pull-up control register 1
------------------------------------------------------*/



#define     pu14        pur1.bit.b4    /* P60 to P63 pull-up */
#define     pu15        pur1.bit.b5    /* P64 to P67 pull-up */
#define     pu16        pur1.bit.b6    /* P70 to P73 pull-up (Except P70,P71 ; P70,P71 -> N-channel open drain ports)*/
#define     pu17        pur1.bit.b7    /* P74 to P77 pull-up */

/*------------------------------------------------------
    Pull-up control register 2
------------------------------------------------------*/



#define     pu20        pur2.bit.b0    /* P80 to P83 pull-up */
#define     pu21        pur2.bit.b1    /* P84 to P87 pull-up (Except P85) */
#define     pu22        pur2.bit.b2    /* P90 to P93 pull-up */
#define     pu23        pur2.bit.b3    /* P94 to P97 pull-up */
#define     pu24        pur2.bit.b4    /* P100 to P103 pull-up */
#define     pu25        pur2.bit.b5    /* P104 to P107 pull-up */

/*------------------------------------------------------
    Port control register
------------------------------------------------------*/



#define     pcr0        pcr.bit.b0     /* Port P1 control register */

/********************************************************
*   declare  SFR char                                   *
********************************************************/
/********************************************************
*   declare  SFR short                                  *
********************************************************/

/********************************************************
*   declare SFR union                                   *
********************************************************/

/*------------------------------------------------------
    DMAi control register union
------------------------------------------------------*/

/*------------------------------------------------------
     dm0con
------------------------------------------------------*/



#define     dmbit_dm0con    dm0con.bit.b0   /* Transfer unit bit select bit */
#define     dmasl_dm0con    dm0con.bit.b1   /* Repeat transfer mode select bit */
#define     dmas_dm0con     dm0con.bit.b2    /* DMA request bit */
#define     dmae_dm0con     dm0con.bit.b3    /* DMA enable bit */
#define     dsd_dm0con      dm0con.bit.b4     /* Source address direction select bit */
#define     dad_dm0con      dm0con.bit.b5     /* Destination address direction select bit */

/*------------------------------------------------------
     dm1con
------------------------------------------------------*/



#define     dmbit_dm1con    dm1con.bit.b0   /* Transfer unit bit select bit */
#define     dmasl_dm1con    dm1con.bit.b1   /* Repeat transfer mode select bit */
#define     dmas_dm1con     dm1con.bit.b2    /* DMA request bit */
#define     dmae_dm1con     dm1con.bit.b3    /* DMA enable bit */
#define     dsd_dm1con      dm1con.bit.b4     /* Source address direction select bit */
#define     dad_dm1con      dm1con.bit.b5     /* Destination address direction select bit */

/*------------------------------------------------------
    interrupt control registers
------------------------------------------------------*/

/*------------------------------------------------------
    CAN0 wake up interrupt control register
------------------------------------------------------*/



#define     ilvl0_c01wkic   c01wkic.bit.b0     /* Interrupt priority level select bit */
#define     ilvl1_c01wkic   c01wkic.bit.b1     /* Interrupt priority level select bit */
#define     ilvl2_c01wkic   c01wkic.bit.b2     /* Interrupt priority level select bit */
#define     ir_c01wkic      c01wkic.bit.b3     /* Interrupt request bit */

/*------------------------------------------------------
    CAN0 error interrupt control register
------------------------------------------------------*/



#define     ilvl0_c01erric  c01erric.bit.b0
#define     ilvl1_c01erric  c01erric.bit.b1
#define     ilvl2_c01erric  c01erric.bit.b2
#define     ir_c01erric     c01erric.bit.b3

/*------------------------------------------------------
    CAN0 successful reception interrupt control register
------------------------------------------------------*/



#define     ilvl0_c0recic  c0recic.bit.b0
#define     ilvl1_c0recic  c0recic.bit.b1
#define     ilvl2_c0recic  c0recic.bit.b2
#define     ir_c0recic     c0recic.bit.b3

/*------------------------------------------------------
    CAN0 successful transmission interrupt control register
------------------------------------------------------*/



#define     ilvl0_c0trmic  c0trmic.bit.b0
#define     ilvl1_c0trmic  c0trmic.bit.b1
#define     ilvl2_c0trmic  c0trmic.bit.b2
#define     ir_c0trmic     c0trmic.bit.b3

/*------------------------------------------------------
     int3ic
------------------------------------------------------*/



#define     ilvl0_int3ic    int3ic.bit.b0  /* Interrupt priority level select bit */
#define     ilvl1_int3ic    int3ic.bit.b1  /* Interrupt priority level select bit */
#define     ilvl2_int3ic    int3ic.bit.b2  /* Interrupt priority level select bit */
#define     ir_int3ic       int3ic.bit.b3     /* Interrupt request bit */
#define     pol_int3ic      int3ic.bit.b4    /* Polarity select bit */

/*------------------------------------------------------
     IC/OC 0 interrupt control register

------------------------------------------------------*/



#define     ilvl0_icoc0ic icoc0ic.bit.b0   /* Interrupt priority level select bit */
#define     ilvl1_icoc0ic icoc0ic.bit.b1   /* Interrupt priority level select bit */
#define     ilvl2_icoc0ic icoc0ic.bit.b2   /* Interrupt priority level select bit */
#define     ir_icoc0ic    icoc0ic.bit.b3      /* Interrupt request bit */

/*------------------------------------------------------
     IC/OC 1 interrupt control register
------------------------------------------------------*/



#define     ilvl0_icoc1ic icoc1ic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_icoc1ic icoc1ic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_icoc1ic icoc1ic.bit.b2    /* Interrupt priority level select bit */
#define     ir_icoc1ic    icoc1ic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     I2C-BUS interface interrupt control register
------------------------------------------------------*/



#define     ilvl0_iicic   iicic.bit.b0      /* Interrupt priority level select bit */
#define     ilvl1_iicic   iicic.bit.b1      /* Interrupt priority level select bit */
#define     ilvl2_iicic   iicic.bit.b2      /* Interrupt priority level select bit */
#define     ir_iicic      iicic.bit.b3         /* Interrupt request bit */

/*------------------------------------------------------
     IC/OC base timer interrupt control register
------------------------------------------------------*/



#define     ilvl0_btic    btic.bit.b0       /* Interrupt priority level select bit */
#define     ilvl1_btic    btic.bit.b1       /* Interrupt priority level select bit */
#define     ilvl2_btic    btic.bit.b2       /* Interrupt priority level select bit */
#define     ir_btic       btic.bit.b3          /* Interrupt request bit */

/*------------------------------------------------------
     SCL DA interrupt control register
------------------------------------------------------*/



#define     ilvl0_scldaic scldaic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_scldaic scldaic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_scldaic scldaic.bit.b2    /* Interrupt priority level select bit */
#define     ir_scldaic    scldaic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     SI/O4 interrupt control register
------------------------------------------------------*/



#define     ilvl0_s4ic  s4ic.bit.b0     /* Interrupt priority level select bit */
#define     ilvl1_s4ic  s4ic.bit.b1     /* Interrupt priority level select bit */
#define     ilvl2_s4ic  s4ic.bit.b2     /* Interrupt priority level select bit */
#define     ir_s4ic     s4ic.bit.b3        /* Interrupt request bit */
#define     pol_s4ic    s4ic.bit.b4       /* Polarity select bit */

/*------------------------------------------------------
     INT5~ interrupt control register
------------------------------------------------------*/



#define     ilvl0_int5ic    int5ic.bit.b0  /* Interrupt priority level select bit */
#define     ilvl1_int5ic    int5ic.bit.b1  /* Interrupt priority level select bit */
#define     ilvl2_int5ic    int5ic.bit.b2  /* Interrupt priority level select bit */
#define     ir_int5ic       int5ic.bit.b3     /* Interrupt request bit */
#define     pol_int5ic      int5ic.bit.b4    /* Polarity select bit */

/*------------------------------------------------------
     SI/O3 interrupt control register
------------------------------------------------------*/



#define     ilvl0_s3ic  s3ic.bit.b0     /* Interrupt priority level select bit */
#define     ilvl1_s3ic  s3ic.bit.b1     /* Interrupt priority level select bit */
#define     ilvl2_s3ic  s3ic.bit.b2     /* Interrupt priority level select bit */
#define     ir_s3ic     s3ic.bit.b3        /* Interrupt request bit */
#define     pol_s3ic    s3ic.bit.b4       /* Polarity select bit */

/*------------------------------------------------------
     INT4~ interrupt control register
------------------------------------------------------*/



#define     ilvl0_int4ic    int4ic.bit.b0  /* Interrupt priority level select bit */
#define     ilvl1_int4ic    int4ic.bit.b1  /* Interrupt priority level select bit */
#define     ilvl2_int4ic    int4ic.bit.b2  /* Interrupt priority level select bit */
#define     ir_int4ic       int4ic.bit.b3     /* Interrupt request bit */
#define     pol_int4ic      int4ic.bit.b4    /* Polarity select bit */

/*------------------------------------------------------
     UART2 Bus collision detection interrupt control register
------------------------------------------------------*/



#define     ilvl0_bcnic bcnic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_bcnic bcnic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_bcnic bcnic.bit.b2    /* Interrupt priority level select bit */
#define     ir_bcnic    bcnic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     DMA0 interrupt control register
------------------------------------------------------*/



#define     ilvl0_dm0ic dm0ic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_dm0ic dm0ic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_dm0ic dm0ic.bit.b2    /* Interrupt priority level select bit */
#define     ir_dm0ic    dm0ic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     DMA1 interrupt control register
------------------------------------------------------*/



#define     ilvl0_dm1ic dm1ic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_dm1ic dm1ic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_dm1ic dm1ic.bit.b2    /* Interrupt priority level select bit */
#define     ir_dm1ic    dm1ic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     Key input interrupt control register
------------------------------------------------------*/



#define     ilvl0_kupic kupic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_kupic kupic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_kupic kupic.bit.b2    /* Interrupt priority level select bit */
#define     ir_kupic    kupic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     A/D conversion interrupt control register
------------------------------------------------------*/



#define     ilvl0_adic  adic.bit.b0     /* Interrupt priority level select bit */
#define     ilvl1_adic  adic.bit.b1     /* Interrupt priority level select bit */
#define     ilvl2_adic  adic.bit.b2     /* Interrupt priority level select bit */
#define     ir_adic     adic.bit.b3        /* Interrupt request bit */

/*------------------------------------------------------
     UART2 transmit interrupt control register
------------------------------------------------------*/



#define     ilvl0_s2tic s2tic.bit.b0     /* Interrupt priority level select bit */
#define     ilvl1_s2tic s2tic.bit.b1     /* Interrupt priority level select bit */
#define     ilvl2_s2tic s2tic.bit.b2     /* Interrupt priority level select bit */
#define     ir_s2tic    s2tic.bit.b3        /* Interrupt request bit */

/*------------------------------------------------------
     UART2 receive interrupt control register
------------------------------------------------------*/



#define     ilvl0_s2ric s2ric.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_s2ric s2ric.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_s2ric s2ric.bit.b2    /* Interrupt priority level select bit */
#define     ir_s2ric    s2ric.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     UART0 transmit interrupt control register
------------------------------------------------------*/



#define     ilvl0_s0tic s0tic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_s0tic s0tic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_s0tic s0tic.bit.b2    /* Interrupt priority level select bit */
#define     ir_s0tic    s0tic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     UART0 receive interrupt control register
------------------------------------------------------*/



#define     ilvl0_s0ric s0ric.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_s0ric s0ric.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_s0ric s0ric.bit.b2    /* Interrupt priority level select bit */
#define     ir_s0ric    s0ric.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     UART1 transmit interrupt control register
------------------------------------------------------*/



#define     ilvl0_s1tic s1tic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_s1tic s1tic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_s1tic s1tic.bit.b2    /* Interrupt priority level select bit */
#define     ir_s1tic    s1tic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     UART1 receive interrupt control register
------------------------------------------------------*/



#define     ilvl0_s1ric s1ric.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_s1ric s1ric.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_s1ric s1ric.bit.b2    /* Interrupt priority level select bit */
#define     ir_s1ric    s1ric.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     Timer A0 interrupt control register
------------------------------------------------------*/



#define     ilvl0_ta0ic ta0ic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_ta0ic ta0ic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_ta0ic ta0ic.bit.b2    /* Interrupt priority level select bit */
#define     ir_ta0ic    ta0ic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     Timer A1 interrupt control register
------------------------------------------------------*/



#define     ilvl0_ta1ic ta1ic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_ta1ic ta1ic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_ta1ic ta1ic.bit.b2    /* Interrupt priority level select bit */
#define     ir_ta1ic    ta1ic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     Timer A2 interrupt control register
------------------------------------------------------*/



#define     ilvl0_ta2ic ta2ic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_ta2ic ta2ic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_ta2ic ta2ic.bit.b2    /* Interrupt priority level select bit */
#define     ir_ta2ic    ta2ic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     Timer A3 interrupt control register
------------------------------------------------------*/



#define     ilvl0_ta3ic ta3ic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_ta3ic ta3ic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_ta3ic ta3ic.bit.b2    /* Interrupt priority level select bit */
#define     ir_ta3ic    ta3ic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     Timer A4 interrupt control register
------------------------------------------------------*/



#define     ilvl0_ta4ic ta4ic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_ta4ic ta4ic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_ta4ic ta4ic.bit.b2    /* Interrupt priority level select bit */
#define     ir_ta4ic    ta4ic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     Timer B0 interrupt control register
------------------------------------------------------*/



#define     ilvl0_tb0ic tb0ic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_tb0ic tb0ic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_tb0ic tb0ic.bit.b2    /* Interrupt priority level select bit */
#define     ir_tb0ic    tb0ic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     Timer B1 interrupt control register
------------------------------------------------------*/



#define     ilvl0_tb1ic tb1ic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_tb1ic tb1ic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_tb1ic tb1ic.bit.b2    /* Interrupt priority level select bit */
#define     ir_tb1ic    tb1ic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     Timer B2 interrupt control register
------------------------------------------------------*/



#define     ilvl0_tb2ic tb2ic.bit.b0    /* Interrupt priority level select bit */
#define     ilvl1_tb2ic tb2ic.bit.b1    /* Interrupt priority level select bit */
#define     ilvl2_tb2ic tb2ic.bit.b2    /* Interrupt priority level select bit */
#define     ir_tb2ic    tb2ic.bit.b3       /* Interrupt request bit */

/*------------------------------------------------------
     INT0~ interrupt control register
------------------------------------------------------*/



#define     ilvl0_int0ic    int0ic.bit.b0  /* Interrupt priority level select bit */
#define     ilvl1_int0ic    int0ic.bit.b1  /* Interrupt priority level select bit */
#define     ilvl2_int0ic    int0ic.bit.b2  /* Interrupt priority level select bit */
#define     ir_int0ic       int0ic.bit.b3     /* Interrupt request bit */
#define     pol_int0ic      int0ic.bit.b4    /* Polarity select bit */

/*------------------------------------------------------
     INT1~ interrupt control register
------------------------------------------------------*/



#define     ilvl0_int1ic    int1ic.bit.b0  /* Interrupt priority level select bit */
#define     ilvl1_int1ic    int1ic.bit.b1  /* Interrupt priority level select bit */
#define     ilvl2_int1ic    int1ic.bit.b2  /* Interrupt priority level select bit */
#define     ir_int1ic       int1ic.bit.b3     /* Interrupt request bit */
#define     pol_int1ic      int1ic.bit.b4    /* Polarity select bit */

/*------------------------------------------------------
     INT2~ interrupt control register
------------------------------------------------------*/



#define     ilvl0_int2ic    int2ic.bit.b0  /* Interrupt priority level select bit */
#define     ilvl1_int2ic    int2ic.bit.b1  /* Interrupt priority level select bit */
#define     ilvl2_int2ic    int2ic.bit.b2  /* Interrupt priority level select bit */
#define     ir_int2ic       int2ic.bit.b3     /* Interrupt request bit */
#define     pol_int2ic      int2ic.bit.b4    /* Polarity select bit */

/*------------------------------------------------------
    Flash memory control register 4
------------------------------------------------------*/



#define     fmr40       fmr4.bit.b0    /* Suspend enable */
#define     fmr41       fmr4.bit.b1    /* Suspend request */
#define     fmr46       fmr4.bit.b6    /* Suspend status */

/*------------------------------------------------------
    Flash memory control register 1
------------------------------------------------------*/

/*------------------------------------------------------
     fmr1
------------------------------------------------------*/



#define     fmr11   fmr1.bit.b1             /* EW1 mode select bit */
#define     fmr16   fmr1.bit.b6             /* Write protect bit 1 */
#define     fmr17   fmr1.bit.b7             /* Block A,B access wait bit */

/*------------------------------------------------------
    Flash memory control register 0
------------------------------------------------------*/

/*------------------------------------------------------
     fmr0
------------------------------------------------------*/



#define     fmr00   fmr0.bit.b0             /* RY/BY status flag */
#define     fmr01   fmr0.bit.b1             /* EW entry bit */
#define     fmr02   fmr0.bit.b2             /* Block 0,1 write enable bit */
#define     fmstp   fmr0.bit.b3             /* Flash memory stop bit */
#define     fmr06   fmr0.bit.b6             /* Program status flag */
#define     fmr07   fmr0.bit.b7             /* Erase status flag */

/*------------------------------------------------------
    Waveform generation control register
------------------------------------------------------*/

/*------------------------------------------------------
    Waveform generation control register 0
------------------------------------------------------*/



#define     mod0_g1pocr0 g1pocr0.bit.b0      /* Operation mode select bit */
#define     mod1_g1pocr0 g1pocr0.bit.b1      /* Operation mode select bit */
#define     ivl_g1pocr0  g1pocr0.bit.b4       /* Output initial value select bit */
#define     rld_g1pocr0  g1pocr0.bit.b5       /* g1po0 register value reload timing select bit */
#define     inv_g1pocr0  g1pocr0.bit.b7       /* Inverse output function select bit */
/*------------------------------------------------------
    Waveform generation control register 1
------------------------------------------------------*/



#define     mod0_g1pocr1 g1pocr1.bit.b0      /* Operation mode select bit */
#define     mod1_g1pocr1 g1pocr1.bit.b1      /* Operation mode select bit */
#define     ivl_g1pocr1  g1pocr1.bit.b4       /* Output initial value select bit */
#define     rld_g1pocr1  g1pocr1.bit.b5       /* g1po1 register value reload timing select bit */
#define     inv_g1pocr1  g1pocr1.bit.b7       /* Inverse output function select bit */
/*------------------------------------------------------
    Waveform generation control register 2
------------------------------------------------------*/



#define     mod0_g1pocr2 g1pocr2.bit.b0      /* Operation mode select bit */
#define     mod1_g1pocr2 g1pocr2.bit.b1      /* Operation mode select bit */
#define     ivl_g1pocr2  g1pocr2.bit.b4       /* Output initial value select bit */
#define     rld_g1pocr2  g1pocr2.bit.b5       /* g1po2 register value reload timing select bit */
#define     inv_g1pocr2  g1pocr2.bit.b7       /* Inverse output function select bit */
/*------------------------------------------------------
    Waveform generation control register 3
------------------------------------------------------*/



#define     mod0_g1pocr3 g1pocr3.bit.b0      /* Operation mode select bit */
#define     mod1_g1pocr3 g1pocr3.bit.b1      /* Operation mode select bit */
#define     ivl_g1pocr3  g1pocr3.bit.b4       /* Output initial value select bit */
#define     rld_g1pocr3  g1pocr3.bit.b5       /* g1po3 register value reload timing select bit */
#define     inv_g1pocr3  g1pocr3.bit.b7       /* Inverse output function select bit */
/*------------------------------------------------------
    Waveform generation control register 4
------------------------------------------------------*/



#define     mod0_g1pocr4 g1pocr4.bit.b0      /* Operation mode select bit */
#define     mod1_g1pocr4 g1pocr4.bit.b1      /* Operation mode select bit */
#define     ivl_g1pocr4  g1pocr4.bit.b4       /* Output initial value select bit */
#define     rld_g1pocr4  g1pocr4.bit.b5       /* g1po4 register value reload timing select bit */
#define     inv_g1pocr4  g1pocr4.bit.b7       /* Inverse output function select bit */
/*------------------------------------------------------
    Waveform generation control register 5
------------------------------------------------------*/



#define     mod0_g1pocr5 g1pocr5.bit.b0      /* Operation mode select bit */
#define     mod1_g1pocr5 g1pocr5.bit.b1      /* Operation mode select bit */
#define     ivl_g1pocr5  g1pocr5.bit.b4       /* Output initial value select bit */
#define     rld_g1pocr5  g1pocr5.bit.b5       /* g1po5 register value reload timing select bit */
#define     inv_g1pocr5  g1pocr5.bit.b7       /* Inverse output function select bit */
/*------------------------------------------------------
    Waveform generation control register 6
------------------------------------------------------*/



#define     mod0_g1pocr6 g1pocr6.bit.b0      /* Operation mode select bit */
#define     mod1_g1pocr6 g1pocr6.bit.b1      /* Operation mode select bit */
#define     ivl_g1pocr6  g1pocr6.bit.b4       /* Output initial value select bit */
#define     rld_g1pocr6  g1pocr6.bit.b5       /* g1po6 register value reload timing select bit */
#define     inv_g1pocr6  g1pocr6.bit.b7       /* Inverse output function select bit */
/*------------------------------------------------------
    Waveform generation control register 7
------------------------------------------------------*/



#define     mod0_g1pocr7 g1pocr7.bit.b0      /* Operation mode select bit */
#define     mod1_g1pocr7 g1pocr7.bit.b1      /* Operation mode select bit */
#define     ivl_g1pocr7  g1pocr7.bit.b4       /* Output initial value select bit */
#define     rld_g1pocr7  g1pocr7.bit.b5       /* g1po7 register value reload timing select bit */
#define     inv_g1pocr7  g1pocr7.bit.b7       /* Inverse output function select bit */

/*------------------------------------------------------
    Time measurement control register
------------------------------------------------------*/

/*------------------------------------------------------
    Time measurement control register 0
------------------------------------------------------*/



#define     cts0_g1tmcr0 g1tmcr0.bit.b0      /* Timer measurement trigger select bit */
#define     cts1_g1tmcr0 g1tmcr0.bit.b1      /* Timer measurement trigger select bit */
#define     df0_g1tmcr0  g1tmcr0.bit.b2        /* Digital filter function select bit */
#define     df1_g1tmcr0  g1tmcr0.bit.b3        /* Digital filter function select bit */
#define     gt_g1tmcr0   g1tmcr0.bit.b4        /* Gate function select bit */
#define     goc_g1tmcr0  g1tmcr0.bit.b5       /* Gate function clear select bit */
#define     gsc_g1tmcr0  g1tmcr0.bit.b6       /* Gate function clear bit */
#define     pr_g1tmcr0   g1tmcr0.bit.b7        /* Prescaler function select bit */

/*------------------------------------------------------
    Time measurement control register 1
------------------------------------------------------*/



#define     cts0_g1tmcr1 g1tmcr1.bit.b0      /* Timer measurement trigger select bit */
#define     cts1_g1tmcr1 g1tmcr1.bit.b1      /* Timer measurement trigger select bit */
#define     df0_g1tmcr1  g1tmcr1.bit.b2        /* Digital filter function select bit */
#define     df1_g1tmcr1  g1tmcr1.bit.b3        /* Digital filter function select bit */
#define     gt_g1tmcr1   g1tmcr1.bit.b4        /* Gate function select bit */
#define     goc_g1tmcr1  g1tmcr1.bit.b5       /* Gate function clear select bit */
#define     gsc_g1tmcr1  g1tmcr1.bit.b6       /* Gate function clear bit */
#define     pr_g1tmcr1   g1tmcr1.bit.b7        /* Prescaler function select bit */

/*------------------------------------------------------
    Time measurement control register 2
------------------------------------------------------*/



#define     cts0_g1tmcr2 g1tmcr2.bit.b0      /* Timer measurement trigger select bit */
#define     cts1_g1tmcr2 g1tmcr2.bit.b1      /* Timer measurement trigger select bit */
#define     df0_g1tmcr2  g1tmcr2.bit.b2        /* Digital filter function select bit */
#define     df1_g1tmcr2  g1tmcr2.bit.b3        /* Digital filter function select bit */
#define     gt_g1tmcr2   g1tmcr2.bit.b4        /* Gate function select bit */
#define     goc_g1tmcr2  g1tmcr2.bit.b5       /* Gate function clear select bit */
#define     gsc_g1tmcr2  g1tmcr2.bit.b6       /* Gate function clear bit */
#define     pr_g1tmcr2   g1tmcr2.bit.b7        /* Prescaler function select bit */

/*------------------------------------------------------
    Time measurement control register 3
------------------------------------------------------*/



#define     cts0_g1tmcr3 g1tmcr3.bit.b0      /* Timer measurement trigger select bit */
#define     cts1_g1tmcr3 g1tmcr3.bit.b1      /* Timer measurement trigger select bit */
#define     df0_g1tmcr3  g1tmcr3.bit.b2        /* Digital filter function select bit */
#define     df1_g1tmcr3  g1tmcr3.bit.b3        /* Digital filter function select bit */
#define     gt_g1tmcr3   g1tmcr3.bit.b4        /* Gate function select bit */
#define     goc_g1tmcr3  g1tmcr3.bit.b5       /* Gate function clear select bit */
#define     gsc_g1tmcr3  g1tmcr3.bit.b6       /* Gate function clear bit */
#define     pr_g1tmcr3   g1tmcr3.bit.b7        /* Prescaler function select bit */

/*------------------------------------------------------
    Time measurement control register 4
------------------------------------------------------*/



#define     cts0_g1tmcr4 g1tmcr4.bit.b0      /* Timer measurement trigger select bit */
#define     cts1_g1tmcr4 g1tmcr4.bit.b1      /* Timer measurement trigger select bit */
#define     df0_g1tmcr4  g1tmcr4.bit.b2        /* Digital filter function select bit */
#define     df1_g1tmcr4  g1tmcr4.bit.b3        /* Digital filter function select bit */
#define     gt_g1tmcr4   g1tmcr4.bit.b4        /* Gate function select bit */
#define     goc_g1tmcr4  g1tmcr4.bit.b5       /* Gate function clear select bit */
#define     gsc_g1tmcr4  g1tmcr4.bit.b6       /* Gate function clear bit */
#define     pr_g1tmcr4   g1tmcr4.bit.b7        /* Prescaler function select bit */

/*------------------------------------------------------
    Time measurement control register 5
------------------------------------------------------*/



#define     cts0_g1tmcr5 g1tmcr5.bit.b0      /* Timer measurement trigger select bit */
#define     cts1_g1tmcr5 g1tmcr5.bit.b1      /* Timer measurement trigger select bit */
#define     df0_g1tmcr5  g1tmcr5.bit.b2        /* Digital filter function select bit */
#define     df1_g1tmcr5  g1tmcr5.bit.b3        /* Digital filter function select bit */
#define     gt_g1tmcr5   g1tmcr5.bit.b4        /* Gate function select bit */
#define     goc_g1tmcr5  g1tmcr5.bit.b5       /* Gate function clear select bit */
#define     gsc_g1tmcr5  g1tmcr5.bit.b6       /* Gate function clear bit */
#define     pr_g1tmcr5   g1tmcr5.bit.b7        /* Prescaler function select bit */

/*------------------------------------------------------
    Time measurement control register 6
------------------------------------------------------*/



#define     cts0_g1tmcr6 g1tmcr6.bit.b0      /* Timer measurement trigger select bit */
#define     cts1_g1tmcr6 g1tmcr6.bit.b1      /* Timer measurement trigger select bit */
#define     df0_g1tmcr6  g1tmcr6.bit.b2        /* Digital filter function select bit */
#define     df1_g1tmcr6  g1tmcr6.bit.b3        /* Digital filter function select bit */
#define     gt_g1tmcr6   g1tmcr6.bit.b4        /* Gate function select bit */
#define     goc_g1tmcr6  g1tmcr6.bit.b5       /* Gate function clear select bit */
#define     gsc_g1tmcr6  g1tmcr6.bit.b6       /* Gate function clear bit */
#define     pr_g1tmcr6   g1tmcr6.bit.b7        /* Prescaler function select bit */
/*------------------------------------------------------
    Time measurement control register 7
------------------------------------------------------*/



#define     cts0_g1tmcr7 g1tmcr7.bit.b0      /* Timer measurement trigger select bit */
#define     cts1_g1tmcr7 g1tmcr7.bit.b1      /* Timer measurement trigger select bit */
#define     df0_g1tmcr7  g1tmcr7.bit.b2        /* Digital filter function select bit */
#define     df1_g1tmcr7  g1tmcr7.bit.b3        /* Digital filter function select bit */
#define     gt_g1tmcr7   g1tmcr7.bit.b4        /* Gate function select bit */
#define     goc_g1tmcr7  g1tmcr7.bit.b5       /* Gate function clear select bit */
#define     gsc_g1tmcr7  g1tmcr7.bit.b6       /* Gate function clear bit */
#define     pr_g1tmcr7   g1tmcr7.bit.b7        /* Prescaler function select bit */

/*------------------------------------------------------
    SI/O3,4 control registers
------------------------------------------------------*/

/*------------------------------------------------------
     SI/O3 control registers
------------------------------------------------------*/



#define     sm30    s3c.bit.b0           /* Internal synchronous clock select bit */
#define     sm31    s3c.bit.b1           /* Internal synchronous clock select bit */
#define     sm32    s3c.bit.b2           /* Sout3 output disable bit */
#define     sm33    s3c.bit.b3           /* SI/O3 port select bit */
#define     sm34    s3c.bit.b4           /* CLK polarity select bit */
#define     sm35    s3c.bit.b5           /* Transfer direction select bit */
#define     sm36    s3c.bit.b6           /* Synchronous clock select bit */
#define     sm37    s3c.bit.b7           /* Sout3 initial value set bit */

/*------------------------------------------------------
     SI/O4 control registers
------------------------------------------------------*/



#define     sm40    s4c.bit.b0           /* Internal synchronous clock select bit */
#define     sm41    s4c.bit.b1           /* Internal synchronous clock select bit */
#define     sm42    s4c.bit.b2           /* Sout4 output disable bit */
#define     sm43    s4c.bit.b3           /* SI/O4 port select bit */
#define     sm44    s4c.bit.b4           /* CLK polarity select bit */
#define     sm45    s4c.bit.b5           /* Transfer direction select bit */
#define     sm46    s4c.bit.b6           /* Synchronous clock select bit */
#define     sm47    s4c.bit.b7           /* Sout4 initial value set bit */

/*------------------------------------------------------
    Timer mode registers
------------------------------------------------------*/

/*------------------------------------------------------
     Timer A0 mode registers
------------------------------------------------------*/



#define     tmod0_ta0mr ta0mr.bit.b0        /* Operation mode select bit */
#define     tmod1_ta0mr ta0mr.bit.b1        /* Operation mode select bit */
#define     mr0_ta0mr   ta0mr.bit.b2
#define     mr1_ta0mr   ta0mr.bit.b3
#define     mr2_ta0mr   ta0mr.bit.b4
#define     mr3_ta0mr   ta0mr.bit.b5
#define     tck0_ta0mr  ta0mr.bit.b6         /* Count source select bit */
#define     tck1_ta0mr  ta0mr.bit.b7         /* Count source select bit */

/*------------------------------------------------------
     Timer A1 mode registers
------------------------------------------------------*/



#define     tmod0_ta1mr ta1mr.bit.b0        /* Operation mode select bit */
#define     tmod1_ta1mr ta1mr.bit.b1        /* Operation mode select bit */
#define     mr0_ta1mr   ta1mr.bit.b2
#define     mr1_ta1mr   ta1mr.bit.b3
#define     mr2_ta1mr   ta1mr.bit.b4
#define     mr3_ta1mr   ta1mr.bit.b5
#define     tck0_ta1mr  ta1mr.bit.b6         /* Count source select bit */
#define     tck1_ta1mr  ta1mr.bit.b7         /* Count source select bit */

/*------------------------------------------------------
     Timer A2 mode registers
------------------------------------------------------*/



#define     tmod0_ta2mr ta2mr.bit.b0        /* Operation mode select bit */
#define     tmod1_ta2mr ta2mr.bit.b1        /* Operation mode select bit */
#define     mr0_ta2mr   ta2mr.bit.b2
#define     mr1_ta2mr   ta2mr.bit.b3
#define     mr2_ta2mr   ta2mr.bit.b4
#define     mr3_ta2mr   ta2mr.bit.b5
#define     tck0_ta2mr  ta2mr.bit.b6         /* Count source select bit */
#define     tck1_ta2mr  ta2mr.bit.b7         /* Count source select bit */

/*------------------------------------------------------
     Timer A3 mode registers
------------------------------------------------------*/



#define     tmod0_ta3mr ta3mr.bit.b0        /* Operation mode select bit */
#define     tmod1_ta3mr ta3mr.bit.b1        /* Operation mode select bit */
#define     mr0_ta3mr   ta3mr.bit.b2
#define     mr1_ta3mr   ta3mr.bit.b3
#define     mr2_ta3mr   ta3mr.bit.b4
#define     mr3_ta3mr   ta3mr.bit.b5
#define     tck0_ta3mr  ta3mr.bit.b6         /* Count source select bit */
#define     tck1_ta3mr  ta3mr.bit.b7         /* Count source select bit */

/*------------------------------------------------------
     Timer A4 mode registers
------------------------------------------------------*/



#define     tmod0_ta4mr ta4mr.bit.b0        /* Operation mode select bit */
#define     tmod1_ta4mr ta4mr.bit.b1        /* Operation mode select bit */
#define     mr0_ta4mr   ta4mr.bit.b2
#define     mr1_ta4mr   ta4mr.bit.b3
#define     mr2_ta4mr   ta4mr.bit.b4
#define     mr3_ta4mr   ta4mr.bit.b5
#define     tck0_ta4mr  ta4mr.bit.b6         /* Count source select bit */
#define     tck1_ta4mr  ta4mr.bit.b7         /* Count source select bit */

/*------------------------------------------------------
     Timer B0 mode registers
 ------------------------------------------------------*/



#define     tmod0_tb0mr tb0mr.bit.b0        /* Operation mode select bit */
#define     tmod1_tb0mr tb0mr.bit.b1        /* Operation mode select bit */
#define     mr0_tb0mr   tb0mr.bit.b2
#define     mr1_tb0mr   tb0mr.bit.b3
#define     mr2_tb0mr   tb0mr.bit.b4
#define     mr3_tb0mr   tb0mr.bit.b5
#define     tck0_tb0mr  tb0mr.bit.b6         /* Count source select bit */
#define     tck1_tb0mr  tb0mr.bit.b7         /* Count source select bit */

/*------------------------------------------------------
     Timer B1 mode registers
------------------------------------------------------*/



#define     tmod0_tb1mr tb1mr.bit.b0        /* Operation mode select bit */
#define     tmod1_tb1mr tb1mr.bit.b1        /* Operation mode select bit */
#define     mr0_tb1mr   tb1mr.bit.b2
#define     mr1_tb1mr   tb1mr.bit.b3
#define     mr2_tb1mr   tb1mr.bit.b4
#define     mr3_tb1mr   tb1mr.bit.b5
#define     tck0_tb1mr  tb1mr.bit.b6         /* Count source select bit */
#define     tck1_tb1mr  tb1mr.bit.b7         /* Count source select bit */

/*------------------------------------------------------
     Timer B2 mode registers
------------------------------------------------------*/



#define     tmod0_tb2mr tb2mr.bit.b0        /* Operation mode select bit */
#define     tmod1_tb2mr tb2mr.bit.b1        /* Operation mode select bit */
#define     mr0_tb2mr   tb2mr.bit.b2
#define     mr1_tb2mr   tb2mr.bit.b3
#define     mr2_tb2mr   tb2mr.bit.b4
#define     mr3_tb2mr   tb2mr.bit.b5
#define     tck0_tb2mr  tb2mr.bit.b6         /* Count source select bit */
#define     tck1_tb2mr  tb2mr.bit.b7         /* Count source select bit */

/*------------------------------------------------------
    UARTi transmit/receive mode register
------------------------------------------------------*/

/*------------------------------------------------------
     UART2 transmit/receive mode register
------------------------------------------------------*/



#define     smd0_u2mr   u2mr.bit.b0          /* Serial I/O mode select bit */
#define     smd1_u2mr   u2mr.bit.b1          /* Serial I/O mode select bit */
#define     smd2_u2mr   u2mr.bit.b2          /* Serial I/O mode select bit */
#define     ckdir_u2mr  u2mr.bit.b3         /* Internal/external clock select bit */
#define     stps_u2mr   u2mr.bit.b4          /* Stop bit length select bit */
#define     pry_u2mr    u2mr.bit.b5           /* Odd/even parity select bit */
#define     prye_u2mr   u2mr.bit.b6          /* Parity enable bit */
#define     iopol_u2mr  u2mr.bit.b7         /* TxD RxD I/O polarity reverse bit */

/*------------------------------------------------------
     UART0 transmit/receive mode register
------------------------------------------------------*/



#define     smd0_u0mr   u0mr.bit.b0           /* Serial I/O mode select bit */
#define     smd1_u0mr   u0mr.bit.b1           /* Serial I/O mode select bit */
#define     smd2_u0mr   u0mr.bit.b2           /* Serial I/O mode select bit */
#define     ckdir_u0mr  u0mr.bit.b3          /* Internal/external clock select bit */
#define     stps_u0mr   u0mr.bit.b4           /* Stop bit length select bit */
#define     pry_u0mr    u0mr.bit.b5            /* Odd/even parity select bit */
#define     prye_u0mr   u0mr.bit.b6           /* Parity enable bit */

/*------------------------------------------------------
     UART1 transmit/receive mode register
------------------------------------------------------*/



#define     smd0_u1mr   u1mr.bit.b0          /* Serial I/O mode select bit */
#define     smd1_u1mr   u1mr.bit.b1          /* Serial I/O mode select bit */
#define     smd2_u1mr   u1mr.bit.b2          /* Serial I/O mode select bit */
#define     ckdir_u1mr  u1mr.bit.b3         /* Internal/external clock select bit */
#define     stps_u1mr   u1mr.bit.b4          /* Stop bit length select bit */
#define     pry_u1mr    u1mr.bit.b5           /* Odd/even parity select bit */
#define     prye_u1mr   u1mr.bit.b6          /* Parity enable bit */

/*------------------------------------------------------
    UARTi transmit/receive control register 0
------------------------------------------------------*/

/*------------------------------------------------------
     UART2 transmit/receive control register 0
------------------------------------------------------*/



#define     clk0_u2c0   u2c0.bit.b0          /* BRG count source select bit */
#define     clk1_u2c0   u2c0.bit.b1          /* BRG count source select bit */
#define     crs_u2c0    u2c0.bit.b2           /* CTS~/RTS~ function select bit */
#define     txept_u2c0  u2c0.bit.b3         /* Transmit register empty flag */
#define     crd_u2c0    u2c0.bit.b4           /* CTS~/RTS~ disable bit */
#define     nch_u2c0    u2c0.bit.b5           /* Data output select bit */
#define     ckpol_u2c0  u2c0.bit.b6         /* CLK polarity select bit */
#define     uform_u2c0  u2c0.bit.b7         /* Transfer format select bit */

/*------------------------------------------------------
     UART0 transmit/receive control register 0
------------------------------------------------------*/



#define     clk0_u0c0   u0c0.bit.b0          /* BRG count source select bit */
#define     clk1_u0c0   u0c0.bit.b1          /* BRG count source select bit */
#define     crs_u0c0    u0c0.bit.b2           /* CTS~/RTS~ function select bit */
#define     txept_u0c0  u0c0.bit.b3         /* Transmit register empty flag */
#define     crd_u0c0    u0c0.bit.b4           /* CTS~/RTS~ disable bit */
#define     nch_u0c0    u0c0.bit.b5           /* Data output select bit */
#define     ckpol_u0c0  u0c0.bit.b6         /* CLK polarity select bit */
#define     uform_u0c0  u0c0.bit.b7         /* Transfer format select bit */

/*------------------------------------------------------
     UART1 transmit/receive control register 0
------------------------------------------------------*/



#define     clk0_u1c0   u1c0.bit.b0          /* BRG count source select bit */
#define     clk1_u1c0   u1c0.bit.b1          /* BRG count source select bit */
#define     crs_u1c0    u1c0.bit.b2           /* CTS~/RTS~ function select bit */
#define     txept_u1c0  u1c0.bit.b3         /* Transmit register empty flag */
#define     crd_u1c0    u1c0.bit.b4           /* CTS~/RTS~ disable bit */
#define     nch_u1c0    u1c0.bit.b5           /* Data output select bit */
#define     ckpol_u1c0  u1c0.bit.b6         /* CLK polarity select bit */
#define     uform_u1c0  u1c0.bit.b7         /* Transfer format select bit */

/*------------------------------------------------------
    UARTi transmit/receive control register 1
------------------------------------------------------*/

/*------------------------------------------------------
     u0c1
------------------------------------------------------*/



#define     te_u0c1     u0c1.bit.b0            /* Transmit enable bit */
#define     ti_u0c1     u0c1.bit.b1            /* Transmit buffer empty flag */
#define     re_u0c1     u0c1.bit.b2            /* Receive enable bit */
#define     ri_u0c1     u0c1.bit.b3            /* Receive complete flag */

/*------------------------------------------------------
     u1c1
------------------------------------------------------*/



#define     te_u1c1     u1c1.bit.b0            /* Transmit enable bit */
#define     ti_u1c1     u1c1.bit.b1            /* Transmit buffer empty flag */
#define     re_u1c1     u1c1.bit.b2            /* Receive enable bit */
#define     ri_u1c1     u1c1.bit.b3            /* Receive complete flag */

/*------------------------------------------------------
    UARTi receive buffer registers
------------------------------------------------------*/

/*------------------------------------------------------
     UART2 receive buffer register
------------------------------------------------------*/

#define     u2rbl       u2rb.byte.low
#define     u2rbh       u2rb.byte.high

#define     abt_u2rb    u2rb.bit.b11           /* Arbitration lost detecting flag */
#define     oer_u2rb    u2rb.bit.b12           /* Overrun error flag */
#define     fer_u2rb    u2rb.bit.b13           /* Framing error flag*/
#define     per_u2rb    u2rb.bit.b14           /* Parity error flag */
#define     sum_u2rb    u2rb.bit.b15           /* Error sum flag */

/*------------------------------------------------------
     UART0 receive buffer register
------------------------------------------------------*/

#define     u0rbl       u0rb.byte.low
#define     u0rbh       u0rb.byte.high

#define     oer_u0rb    u0rb.bit.b12           /* Overrun error flag */
#define     fer_u0rb    u0rb.bit.b13           /* Framing error flag*/
#define     per_u0rb    u0rb.bit.b14           /* Parity error flag */
#define     sum_u0rb    u0rb.bit.b15           /* Error sum flag */

/*------------------------------------------------------
     UART1 receive buffer register
------------------------------------------------------*/

#define     u1rbl       u1rb.byte.low
#define     u1rbh       u1rb.byte.high

#define     oer_u1rb    u1rb.bit.b12           /* Overrun error flag */
#define     fer_u1rb    u1rb.bit.b13           /* Framing error flag*/
#define     per_u1rb    u1rb.bit.b14           /* Parity error flag */
#define     sum_u1rb    u1rb.bit.b15           /* Error sum flag */

/*------------------------------------------------------
    DMAi request cause select registers
------------------------------------------------------*/

/*------------------------------------------------------
     dm0sl
------------------------------------------------------*/



#define     dsel0_dm0sl dm0sl.bit.b0        /* DMA request cause select bit */
#define     dsel1_dm0sl dm0sl.bit.b1        /* DMA request cause select bit */
#define     dsel2_dm0sl dm0sl.bit.b2        /* DMA request cause select bit */
#define     dsel3_dm0sl dm0sl.bit.b3        /* DMA request cause select bit */
#define     dms_dm0sl   dm0sl.bit.b6          /* DMA request cause expansion bit */
#define     dsr_dm0sl   dm0sl.bit.b7          /* Software DMA request bit */

/*------------------------------------------------------
     dm1sl
------------------------------------------------------*/



#define     dsel0_dm1sl dm1sl.bit.b0        /* DMA request cause select bit */
#define     dsel1_dm1sl dm1sl.bit.b1        /* DMA request cause select bit */
#define     dsel2_dm1sl dm1sl.bit.b2        /* DMA request cause select bit */
#define     dsel3_dm1sl dm1sl.bit.b3        /* DMA request cause select bit */
#define     dms_dm1sl   dm1sl.bit.b6          /* DMA request cause expansion bit */
#define     dsr_dm1sl   dm1sl.bit.b7          /* Software DMA request bit */

/********************************************************
*   declare SFR union                                   *
********************************************************/

union word_def_1{
    struct{
        char    b0:1;
        char    b1:1;
        char    b2:1;
        char    b3:1;
        char    b4:1;
        char    b5:1;
        char    b6:1;
        char    b7:1;
        char    b8:1;
        char    b9:1;
        char    b10:1;
        char    b11:1;
        char    b12:1;
        char    b13:1;
        char    b14:1;
        char    b15:1;
        char    b16:1;
        char    b17:1;
        char    b18:1;
        char    b19:1;
    }bit;
    struct{
        char    low;                /* low  8 bit */
        char    mid;                /* mid  8 bit */
        char    high;               /* high 8 bit */
        char    nc;                 /* non use */
    }byte;
    unsigned long   dword;
} ;
        /* Address match interrupt register 0 32 bit */
#define     rmad0l      rmad0.byte.low         /* Address match interrupt register 0 low  8 bit */
#define     rmad0m      rmad0.byte.mid         /* Address match interrupt register 0 mid  8 bit */
#define     rmad0h      rmad0.byte.high        /* Address match interrupt register(*(volatile union byte_def *) (0x0 hig)) 8 bit */
        /* Address match interrupt register 1 32 bit */
#define     rmad1l      rmad1.byte.low         /* Address match interrupt register 1 low  8 bit */
#define     rmad1m      rmad1.byte.mid         /* Address match interrupt register 1 mid  8 bit */
#define     rmad1h      rmad1.byte.high        /* Address match interrupt register 1 high 8 bit */
         /* DMA0 source pointer 32 bit */
#define     sar0l       sar0.byte.low          /* DMA0 source pointer low  8 bit */
#define     sar0m       sar0.byte.mid          /* DMA0 source pointer mid  8 bit */
#define     sar0h       sar0.byte.high         /* DMA0 source pointer high 8 bit */
         /* DMA0 destination pointer 32 bit */
#define     dar0l       dar0.byte.low          /* DMA0 destination pointer low  8 bit */
#define     dar0m       dar0.byte.mid          /* DMA0 destination pointer mid  8 bit */
#define     dar0h       dar0.byte.high         /* DMA0 destination pointer high 8 bit */
         /* DMA1 source pointer 32 bit */
#define     sar1l       sar1.byte.low          /* DMA1 source pointer low  8 bit */
#define     sar1m       sar1.byte.mid          /* DMA1 source pointer mid  8 bit */
#define     sar1h       sar1.byte.high         /* DMA1 source pointer high 8 bit */
         /* DMA1 destination pointer 32 bit */
#define     dar1l       dar1.byte.low          /* DMA1 destination pointer low  8 bit */
#define     dar1m       dar1.byte.mid          /* DMA1 destination pointer mid  8 bit */
#define     dar1h       dar1.byte.high         /* DMA1 destination pointer high 8 bit */

union word_def_2{
    struct{
        char    b0:1;
        char    b1:1;
        char    b2:1;
        char    b3:1;
        char    b4:1;
        char    b5:1;
        char    b6:1;
        char    b7:1;
        char    b8:1;
        char    b9:1;
        char    b10:1;
        char    b11:1;
        char    b12:1;
        char    b13:1;
        char    b14:1;
        char    b15:1;
    }bit;
    struct{
        char    low;                /* low  8 bit */
        char    high;               /* high 8 bit */
    }byte;
    unsigned short  word;
} ;

             /* DMA0 transfer counter 16 bit */
#define     tcr0l   tcr0.byte.low              /* DMA0 transfer counter low  8 bit */
#define     tcr0h   tcr0.byte.high             /* DMA0 transfer counter high 8 bit */
             /* DMA1 transfer counter 16 bit */
#define     tcr1l   tcr1.byte.low              /* DMA1 transfer counter low  8 bit */
#define     tcr1h   tcr1.byte.high             /* DMA1 transfer counter high 8 bit */
             /* Time measurement register 0 16 bit */
#define     g1tm0l  g1tm0.byte.low             /* Time measurement register 0 low  8bit */
#define     g1tm0h  g1tm0.byte.high            /* Time measurement register(*(volatile union byte_def *) (0x0 hig)) 8bit */
             /* Waveform generation register 0 16 bit */
#define     g1po0l  g1po0.byte.low             /* Waveform generation registerlow  8bit */
#define     g1po0h  g1po0.byte.high            /* Waveform generation registerhigh 8bit */
             /* Time measurement register 1 16 bit */
#define     g1tm1l  g1tm1.byte.low             /* Time measurement register 1 low  8bit */
#define     g1tm1h  g1tm1.byte.high            /* Time measurement register 1 high 8bit */
             /* Waveform generation register 1 16 bit */
#define     g1po1l  g1po1.byte.low             /* Waveform generation registerlow  8bit */
#define     g1po1h  g1po1.byte.high            /* Waveform generation registerhigh 8bit */
             /* Time measurement register 2 16 bit */
#define     g1tm2l  g1tm2.byte.low             /* Time measurement register 2 low  8bit */
#define     g1tm2h  g1tm2.byte.high            /* Time measurement register 2 high 8bit */
             /* Waveform generation register 2 16 bit */
#define     g1po2l  g1po2.byte.low             /* Waveform generation registerlow  8bit */
#define     g1po2h  g1po2.byte.high            /* Waveform generation registerhigh 8bit */
             /* Time measurement register 3 16 bit */
#define     g1tm3l  g1tm3.byte.low             /* Time measurement register 3 low  8bit */
#define     g1tm3h  g1tm3.byte.high            /* Time measurement register 3 high 8bit */
             /* Waveform generation register 3 16 bit */
#define     g1po3l  g1po3.byte.low             /* Waveform generation registerlow  8bit */
#define     g1po3h  g1po3.byte.high            /* Waveform generation registerhigh 8bit */
             /* Time measurement register 4 16 bit */
#define     g1tm4l  g1tm4.byte.low             /* Time measurement register 4 low  8bit */
#define     g1tm4h  g1tm4.byte.high            /* Time measurement register 4 high 8bit */
             /* Waveform generation register 4 16 bit */
#define     g1po4l  g1po4.byte.low             /* Waveform generation registerlow  8bit */
#define     g1po4h  g1po4.byte.high            /* Waveform generation registerhigh 8bit */
             /* Time measurement register 5 16 bit */
#define     g1tm5l  g1tm5.byte.low             /* Time measurement register 5 low  8bit */
#define     g1tm5h  g1tm5.byte.high            /* Time measurement register 5 high 8bit */
             /* Waveform generation register 5 16 bit */
#define     g1po5l  g1po5.byte.low             /* Waveform generation registerlow  8bit */
#define     g1po5h  g1po5.byte.high            /* Waveform generation registerhigh 8bit */
             /* Time measurement register 6 16 bit */
#define     g1tm6l  g1tm6.byte.low             /* Time measurement register 6 low  8bit */
#define     g1tm6h  g1tm6.byte.high            /* Time measurement register 6 high 8bit */
             /* Waveform generation register 6 16 bit */
#define     g1po6l  g1po6.byte.low             /* Waveform generation registerlow  8bit */
#define     g1po6h  g1po6.byte.high            /* Waveform generation registerhigh 8bit */
             /* Time measurement register 7 16 bit */
#define     g1tm7l  g1tm7.byte.low             /* Time measurement register 7 low  8bit */
#define     g1tm7h  g1tm7.byte.high            /* Time measurement register 7 high 8bit */
             /* Waveform generation register 7 16 bit */
#define     g1po7l  g1po7.byte.low             /* Waveform generation registerlow  8bit */
#define     g1po7h  g1po7.byte.high            /* Waveform generation registerhigh 8bit */
              /* Base timer register 16 bit */
#define     g1btl   g1bt.byte.low              /* Base timer register low  8 bit */
#define     g1bth   g1bt.byte.high             /* Base timer register high 8 bit */
            /* Base timer reset register 16 bit */
#define     g1btrrl g1btrr.byte.low            /* Base timer reset register low  8 bit */
#define     g1btrrh g1btrr.byte.high           /* Base timer reset register high 8 bit */
              /* UART2 Transmit buffer register 16 bit ; Use "MOV" instruction when writing to this register. */
#define     u2tbl   u2tb.byte.low              /* UART2 Transmit buffer register low  8 bit */
#define     u2tbh   u2tb.byte.high             /* UART2 Transmit buffer register high 8 bit */
              /* UART0 Transmit buffer register 16 bit ; Use "MOV" instruction when writing to this register. */
#define     u0tbl   u0tb.byte.low              /* UART0 Transmit buffer register low  8 bit */
#define     u0tbh   u0tb.byte.high             /* UART0 Transmit buffer register high 8 bit */
              /* UART1 Transmit buffer register 16 bit ; Use "MOV" instruction when writing to this register. */
#define     u1tbl   u1tb.byte.low              /* UART1 Transmit buffer register low  8 bit */
#define     u1tbh   u1tb.byte.high             /* UART1 Transmit buffer register high 8 bit */
             /* CRC data register */
#define     crcdl    crcd.byte.low             /* CRC data register low */
#define     crcdh    crcd.byte.high            /* CRC data register high */
               /* A/D register 0 16 bit */
#define     ad0l    ad0.byte.low               /* A/D register 0 low  8 bit */
#define     ad0h    ad0.byte.high              /* A/D register(*(volatile union byte_def *) (0x0 hig)) 8 bit */
               /* A/D register 1 16 bit */
#define     ad1l    ad1.byte.low               /* A/D register 1 low  8 bit */
#define     ad1h    ad1.byte.high              /* A/D register 1 high 8 bit */
               /* A/D register 2 16 bit */
#define     ad2l    ad2.byte.low               /* A/D register 2 low  8 bit */
#define     ad2h    ad2.byte.high              /* A/D register 2 high 8 bit */
               /* A/D register 3 16 bit */
#define     ad3l    ad3.byte.low               /* A/D register 3 low  8 bit */
#define     ad3h    ad3.byte.high              /* A/D register 3 high 8 bit */
               /* A/D register 4 16 bit */
#define     ad4l    ad4.byte.low               /* A/D register 4 low  8 bit */
#define     ad4h    ad4.byte.high              /* A/D register 4 high 8 bit */
               /* A/D register 5 16 bit */
#define     ad5l    ad5.byte.low               /* A/D register 5 low  8 bit */
#define     ad5h    ad5.byte.high              /* A/D register 5 high 8 bit */
               /* A/D register 6 16 bit */
#define     ad6l    ad6.byte.low               /* A/D register 6 low  8 bit */
#define     ad6h    ad6.byte.high              /* A/D register 6 high 8 bit */
               /* A/D register 7 16 bit */
#define     ad7l    ad7.byte.low               /* A/D register 7 low  8 bit */
#define     ad7h    ad7.byte.high              /* A/D register 7 high 8 bit */
             /* sfr address register */
#define     crcsarl    crcsar.byte.low             /* sfr address register low */
#define     crcsarh    crcsar.byte.high            /* sfr address register high */
#define     crcsar0    crcsar.bit.b0               /* sfr address register b0 */
#define     crcsar1    crcsar.bit.b1               /* sfr address register b1 */
#define     crcsar2    crcsar.bit.b2               /* sfr address register b2 */
#define     crcsar3    crcsar.bit.b3               /* sfr address register b3 */
#define     crcsar4    crcsar.bit.b4               /* sfr address register b4 */
#define     crcsar5    crcsar.bit.b5               /* sfr address register b5 */
#define     crcsar6    crcsar.bit.b6               /* sfr address register b6 */
#define     crcsar7    crcsar.bit.b7               /* sfr address register b7 */
#define     crcsar8    crcsar.bit.b8               /* sfr address register b8 */
#define     crcsar9    crcsar.bit.b9               /* sfr address register b9 */
#define     crcsr      crcsar.bit.b14              /* sfr address register b14 */
#define     crcsw      crcsar.bit.b15              /* sfr address register b15 */

/*------------------------------------------------------
    CAN message box
------------------------------------------------------*/
struct can_slot_byte_def{
    char    sidh;                   /* Standard-ID register [10:6] */
    char    sidl;                   /* Standard-ID register [5:0] */
    char    eidh;                   /* Extended-ID register [17:14] */
    char    eidm;                   /* Extended-ID register [13:6] */
    char    eidl;                   /* Extended-ID register [5:0] */
    char    dlc;                    /* Data length code */
    char    data[8];                /* Data(8byte) */
    char    tsh;                    /* Time stamp register(High) */
    char    tsl;                    /* Time stamp register(Low) */
};
struct can_slot_word_def{
    char    sidl;                   /* Standard-ID register [5:0] */
    char    sidh;                   /* Standard-ID register [10:6] */
    char    eidm;                   /* Extended-ID register [13:6] */
    char    eidh;                   /* Extended-ID register [17:14] */
    char    dlc;                    /* Data length code */
    char    eidl;                   /* Extended-ID register [5:0] */
    char    data[8];                /* Data(8byte) */
    char    tsl;                    /* Time stamp register(Low) */
    char    tsh;                    /* Time stamp register(High) */
};
union can_slot_def_t{
    struct can_slot_byte_def    ba;
    struct can_slot_word_def    wa;
    char byte[16];
    short word[8];
};


/*------------------------------------------------------
    CAN mask register
------------------------------------------------------*/
struct can_mask_byte_def{
    char    sidh;                   /* Standard-ID register [10:6] */
    char    sidl;                   /* Standard-ID register [5:0] */
    char    eidh;                   /* Extended-ID register [17:14] */
    char    eidm;                   /* Extended-ID register [13:6] */
    char    eidl;                   /* Extended-ID register [5:0] */
    char    dummy;                  /* Reserved byte */
};
struct can_mask_word_def{
    char    sidl;                   /* Standard-ID register [5:0] */
    char    sidh;                   /* Standard-ID register [10:6] */
    char    eidm;                   /* Extended-ID register [13:6] */
    char    eidh;                   /* Extended-ID register [17:14] */
    char    dummy;                  /* Reserved byte */
    char    eidl;                   /* Extended-ID register [5:0] */
};
union can_mask_def_t{
    struct can_mask_byte_def    ba;
    struct can_mask_word_def    wa;
};



/*------------------------------------------------------
    CAN0 message control register
------------------------------------------------------*/
union can_mctl_def{
    struct{
        char    newdata:1;      /* Successful reception flag */
        char    invaldata:1;    /* Under reception flag */
        char    msglost:1;      /* Overwrite flag */
        char    remactive:1;    /* Remote frame transmission/reception status flag */
        char    rsplock:1;      /* Transmission reception auto response lock mode select bit */
        char    remote:1;       /* Remote frame corresponding slot select bit */
        char    recreq:1;       /* Reception slot requiest bit */
        char    dummy:1;        /* Reserved bit */
    }receive;
    struct{
        char    sentdata:1;     /* Successful transmission flag */
        char    trmactive:1;    /* Under transmission flag */
        char    dummy1:1;       /* Reserved bit */
        char    remactive:1;    /* Remote frame transmission/reception status flag */
        char    dummy2:1;       /* Reserved bit */
        char    remote:1;       /* Remote frame corresponding slot select bit */
        char    dummy3:1;       /* Reserved bit */
        char    trmreq:1;       /* Transmission slot request bit */
    }transmit;
    char byte;
};

/********************************************************
*   declare SFR bit                                     *
********************************************************/
struct slot_bit_def {
        char    slot0:1;
        char    slot1:1;
        char    slot2:1;
        char    slot3:1;
        char    slot4:1;
        char    slot5:1;
        char    slot6:1;
        char    slot7:1;
        char    slot8:1;
        char    slot9:1;
        char    slot10:1;
        char    slot11:1;
        char    slot12:1;
        char    slot13:1;
        char    slot14:1;
        char    slot15:1;
};
union slot_def{
    struct slot_bit_def b;
    short   word;
};

/********************************************************
*   declare SFR bit                                     *
********************************************************/
struct bit_word_def {
        char    b0:1;
        char    b1:1;
        char    b2:1;
        char    b3:1;
        char    b4:1;
        char    b5:1;
        char    b6:1;
        char    b7:1;
        char    b8:1;
        char    b9:1;
        char    b10:1;
        char    b11:1;
        char    b12:1;
        char    b13:1;
        char    b14:1;
        char    b15:1;
};
union word_def{
    struct bit_word_def b;
    struct{
        char    low;                /* Lower byte */
        char    high;               /* Higher byte */
    }byte;
    short   word;
};

/*------------------------------------------------------
    CAN0 control register
------------------------------------------------------*/
union c0ctlr_def{
    struct{
        char        reset:1;        /* CAN module reset bit */
        char        loopback:1;     /* Loop back mode select bit */
        char        msgorder:1;     /* Messsage order select bit */
        char        basiccan:1;     /* Basic CAN mode select bit */
        char        buserren:1;     /* Bus error interrupt enable bit */
        char        sleep:1;        /* Sleep mode select bit */
        char        porten:1;       /* CAN port enable bit */
        char        dummy0:1;       /* Reserved bit */
        char        tsprescale:2;   /* TimeStamp prescaler */
        char        tsreset:1;      /* TimeStamp reset */
        char        retbusoff:1;    /* Return from bus off command bit */
        char        dummy1:1;       /* Reserved bit */
        char        rxonly:1;       /* Listen-only mode select bit */
        char        dummy2:2;       /* Reserved bit */
    }b;
    struct{
        char    low;                /* low  8 bit */
        char    high;               /* high 8 bit */
    }byte;
    short   word;
} ;

            /* CAN0 Control register */
#define     c0ctlrl     c0ctlr.byte.low        /* CAN0 Control register low  8 bit */
#define     c0ctlrh     c0ctlr.byte.high       /* CAN0 Control register high 8 bit */

#define     reset_c0ctlr        c0ctlr.b.reset
#define     loopback_c0ctlr     c0ctlr.b.loopback
#define     msgorder_c0ctlr     c0ctlr.b.msgorder
#define     basiccan_c0ctlr     c0ctlr.b.basiccan
#define     buserren_c0ctlr     c0ctlr.b.buserren
#define     sleep_c0ctlr        c0ctlr.b.sleep
#define     porten_c0ctlr       c0ctlr.b.porten
#define     tsprescale_c0ctlr   c0ctlr.b.tsprescale
#define     tsreset_c0ctlr      c0ctlr.b.tsreset
#define     retbusoff_c0ctlr    c0ctlr.b.retbusoff
#define     rxonly_c0ctlr       c0ctlr.b.rxonly

/*------------------------------------------------------
    CAN0 status register
------------------------------------------------------*/
union c0str_def{
    struct{
        char    mbox:4;             /* Active slot bits */
        char    trmsucc:1;          /* Successful transmission flag */
        char    recsucc:1;          /* Successful reception flag */
        char    trmstate:1;         /* Transmission flag (Transmitter) */
        char    recstate:1;         /* Reception flag (Receiver) */
        char    state_reset:1;      /* Reset state flag */
        char    state_loopback:1;   /* Loop back state flag */
        char    state_msgorder:1;   /* Message order state flag */
        char    state_basiccan:1;   /* BasicCAN feature state flag */
        char    state_buserror:1;   /* Bus error state flag */
        char    state_errpas:1;     /* Error passive state flag */
        char    state_busoff:1;     /* Error bus off state flag */
        char    dummy:1;            /* Reserved bit */
    }b;
    struct{
        char    low;                /* low  8 bit */
        char    high;               /* high 8 bit */
    }byte;
    short   word;
} ;

            /* CAN0 Status register */
#define     c0strl     c0str.byte.low        /* CAN0 Status register low  8 bit */
#define     c0strh     c0str.byte.high       /* CAN0 Status register high 8 bit */

#define     mbox_c0str      c0str.b.mbox
#define     trmsucc_c0str   c0str.b.trmsucc
#define     recsucc_c0str   c0str.b.recsucc
#define     trmstate_c0str  c0str.b.trmstate
#define     recstate_c0str  c0str.b.recstate
#define     state_reset_c0str       c0str.b.state_reset
#define     state_loopback_c0str    c0str.b.state_loopback
#define     state_msgorder_c0str    c0str.b.state_msgorder
#define     state_basiccan_c0str    c0str.b.state_basiccan
#define     state_buserror_c0str    c0str.b.state_buserror
#define     state_errpas_c0str      c0str.b.state_errpas
#define     state_busoff_c0str      c0str.b.state_busoff

/*------------------------------------------------------
    CAN0 slot status register
------------------------------------------------------*/


            /*  CAN0 slot status register */

/*------------------------------------------------------
    CAN0 interrupt control register
------------------------------------------------------*/


            /*  CAN0 interrupt control register */

/*------------------------------------------------------
    CAN0 extended ID register
------------------------------------------------------*/


            /*  CAN0 extended ID register */

/*------------------------------------------------------
    CAN0 configuration reigster
------------------------------------------------------*/
union c0conr_def{
    struct{
        char        brp:4;          /* Prescaler divider */
        char        sam:1;          /* Sampling control bit */
        char        pts:3;          /* Propagation time segment */
        char        pbs1:3;         /* Phase buffer segment 1 */
        char        pbs2:3;         /* Phase buffer segment 2 */
        char        sjw:2;          /* Resynchronization jump width */
    }b;
    struct{
        char    low;                /* low  8 bit */
        char    high;               /* high 8 bit */
    }byte;
    short   word;
} ;

            /*  CAN0 configuration reigster  */
#define     c0conrl     c0conr.byte.low        /*  CAN0 configuration reigster low  8 bit */
#define     c0conrh     c0conr.byte.high       /*  CAN0 configuration reigster high 8 bit */

#define     brp_c0conr  c0conr.b.brp
#define     sam_c0conr  c0conr.b.sam
#define     pts_c0conr  c0conr.b.pts
#define     pbs1_c0conr c0conr.b.pbs1
#define     pbs2_c0conr c0conr.b.pbs2
#define     sjw_c0conr  c0conr.b.sjw

/*------------------------------------------------------
    CAN0 receive/transmiterror count register
------------------------------------------------------*/

#define     c0rec       c0recr.byte    /* CAN0 receive error count register */
#define     c0tec       c0tecr.byte    /* CAN0 transmit error count register */

/*------------------------------------------------------
    CAN0 time stamp register
------------------------------------------------------*/

            /*  CAN0 time stamp register  */
#define     c0tsrl     c0tsr.byte.low        /*  CAN0 time stamp register low  8 bit */
#define     c0tsrh     c0tsr.byte.high       /*  CAN0 time stamp register high 8 bit */



/*------------------------------------------------------
    CAN0 acceptance filter register
------------------------------------------------------*/
union c0afs_def{
    char    byte[2];
    short   word;
} ;


/*------------------------------------------------------
    CAN0 clock select register
------------------------------------------------------*/



#define     cclk0       cclkr.bit.b0 /* CAN0 clock select bits */
#define     cclk1       cclkr.bit.b1 /* CAN0 clock select bits */
#define     cclk2       cclkr.bit.b2 /* CAN0 clock select bits */
#define     cclk3       cclkr.bit.b3 /* CAN0 CPU interface sleep bit */

#endif

